{"version":3,"sources":["components/common/preloader/preloader.module.css","redux/users_reducer.js","img/redux-logo.svg","img/react-logo.svg","img/bootstrap-logo.svg","components/Dialogs/Dialog-items/DialogItems.module.css","components/Dialogs/Dialog-items/DialogItem/DialogItem.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/Message/Message.module.css","api/api.js","serviceWorker.js","redux/profile_reducer.js","redux/messages_reducer.js","redux/auth_reducer.js","redux/app_reducer.js","redux/theme_reducer.js","redux/redux_store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.styles.js","components/Navbar/Navbar.jsx","components/Profile/ProfileDescription/PersonalData.styles.js","components/Profile/ProfileDescription/ProfileStatusWithHook.jsx","components/Profile/ProfileDescription/ProfileData.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Profile/ProfileDescription/ProfileDataForm.jsx","components/Profile/ProfileDescription/ProfileDescription.jsx","components/Profile/Posts/Post/PostContainer.styles.js","components/common/Thumbnail/thumbnail.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/NewPost/NewPostContainer.styles.js","components/Profile/NewPost/NewPostContainer.jsx","components/Profile/NewPost/NewPost.jsx","components/Profile/Profile.jsx","hoc/withAuthRedirect.js","components/Profile/ProfileContainer.jsx","components/Dialogs/Dialogs.styles.js","components/Dialogs/Dialog-items/DialogItem/DialogItem.jsx","components/Dialogs/Dialog-items/DialogItems.jsx","components/Dialogs/Messages/Message/Message.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Login/Login.jsx","components/Footer/Footer.styles.js","components/Footer/Footer.jsx","App.js","hoc/withSuspense.js","index.js","img/genericUser.png","components/common/FormsControls/FormsControls.module.css","components/common/Thumbnail/thumbnail.module.css","components/common/preloader/preloader.jsx"],"names":["module","exports","initialState","users","totalUsersCount","pageSize","currentPage","isFetching","followingInProgress","followStatusChange","userId","type","setCurrentPage","toggleIsFetching","isfetching","toggleFollowingProgress","requestUsers","dispatch","a","usersAPI","getUsers","data","items","count","totalCount","follwUnfollowFlow","apiMethod","actionCreator","resultCode","followUser","bind","unfollowUser","usersReducer","state","action","map","u","id","followed","filter","instance","axios","baseURL","withCredentials","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","saveProfileData","progileData","saveAvatar","photo","formData","FormData","append","authAPI","me","logIn","email","password","rememberMe","logOut","Boolean","window","location","hostname","match","ADD_POST","posts","datetime","author","text","likesCount","profile","setStatus","getUserProfile","profileReducer","date","Date","localDate","toLocaleDateString","replace","localTime","toLocaleTimeString","slice","newPost","userName","newPostBody","photos","dialogs","name","surname","user_id","messages","message","messagesReducer","newMessage","length","author_id","sendMessageBody","stateCopy","newMessageBody","push","login","isAuth","setAuthUserData","getAuthUserData","authReducer","initialized","appReducer","themeColors","mainBorder","mainBG","subBG","followedBG","unfollowedBG","mainLink","hoverLink","checkedLink","mainText","hoverMainText","themeReducer","reducers","combineReducers","profilePage","messagesPage","usersPage","auth","form","formReducer","app","theme","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","Header","props","useState","currentTheme","setCurrentTheme","currentVariant","setCurrentVariant","useEffect","bg","variant","expand","className","Brand","href","alt","src","reactLogo","style","width","reduxLogo","bootstrapLogo","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","onClick","setLightTheme","setDarkTheme","setBlueTheme","Form","inline","Button","to","activeClassName","HeaderContainer","this","React","Component","connect","styles","AsideNavBar","styled","div","Status","span","isOwner","ProfileMenu","PersonalData","PersonalDataForm","ProfileStatusWithHook","editMode","setEditMode","autoFocus","onChange","e","currentTarget","value","onBlur","ProfileData","fullName","Table","aboutMe","lookingForAJob","lookingForAJobDescription","Accordion","defaultActiveKey","Card","as","eventKey","Object","keys","contacts","key","contactTitle","contactValue","Contact","FormsControl","meta","touched","error","children","isError","s","Textarea","input","restProps","newMeta","toLowerCase","Input","Control","createField","component","validators","placeholder","Field","validate","required","EditProfileReduxForm","reduxForm","deactivateEditMode","handleSubmit","onSubmit","summaryError","float","ProfileDataForm","initialValues","ProfileDescription","large","userPic","target","files","PostContainer","Thumbnail","params","currentUserId","refreshThumbnail","prevProps","prevState","snapshot","thumbnail","avatar","small","withRouter","Post","Posts","memo","postsElements","p","maxLength","minLength","NewPostContainer","maxLengthValidator","minLengthValidator","NewPostReduxForm","reset","NewPost","addPost","newBody","Profile","mapStateToPropsForAuthRedirect","withAuthRedirect","RedirectComponent","ProfileContainer","getUserStatus","refreshProfile","newPostText","log","getState","stopSubmit","_error","Promise","reject","Wrapper","DialogItem","path","item","DialogItems","dialogs_elements","d","dialog_items","Message","Messages","messages_elements","m","Dialogs","sendMessage","addMessageActionCreator","LoginReduxForm","Group","controlId","Label","Text","FooterContainer","footer","Container","Row","Col","sm","md","getFullYear","UsersContainer","lazy","App","initializeApp","container","xs","render","DialogsContainer","fallback","promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Preloader","overlay","preloader","animation"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,2BAA2B,UAAY,+B,uxBCCnE,IAQIC,EAAe,CACfC,MAAO,GACPC,gBAAiB,EACjBC,SAAU,GACVC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAwCZC,EAAqB,SAACC,GAAD,MAAa,CAACC,KAtDnB,6BAsD+CD,OAAQA,IAMvEE,EAAiB,SAACN,GAAD,MAAkB,CAACK,KAzDxB,yBAyDgDL,gBAE5DO,EAAmB,SAACC,GAAD,MAAiB,CAACH,KA1D1B,wBA0DiDG,eAE5DC,EAA0B,SAACD,EAAYJ,GAAb,MAAyB,CAACC,KA3D/B,kCA2DgEG,aAAYJ,WAEjGM,EAAe,SAACV,EAAaD,GAAd,8CAA2B,WAAOY,GAAP,eAAAC,EAAA,6DACnDD,EAASJ,GAAiB,IADyB,SAElCM,IAASC,SAASd,EAAaD,GAFG,OAE/CgB,EAF+C,OAGnDJ,EAASJ,GAAiB,IAC1BI,EAdoC,CAACN,KAvDvB,kBAuDwCR,MAcpCkB,EAAKC,QACvBL,EAb0C,CAACN,KAxDjB,8BAwD8CY,MAa5CF,EAAKG,aALkB,2CAA3B,uDAQtBC,EAAiB,uCAAG,WAAOR,EAAUP,EAAQgB,EAAWC,GAApC,SAAAT,EAAA,6DACtBD,EAASF,GAAwB,EAAML,IADjB,SAELgB,EAAUhB,GAFL,OAGE,IAHF,OAGbkB,YAAkBX,EAASU,EAAcjB,IAClDO,EAASF,GAAwB,EAAOL,IAJlB,2CAAH,4DAOVmB,EAAa,SAACnB,GAAD,8CAAY,WAAOO,GAAP,SAAAC,EAAA,sDAClCO,EAAkBR,EAAUP,EAAQS,IAASU,WAAWC,KAAKX,KAAWV,GADtC,2CAAZ,uDAIbsB,EAAe,SAACrB,GAAD,8CAAY,WAAOO,GAAP,SAAAC,EAAA,sDACpCO,EAAkBR,EAAUP,EAAQS,IAASY,aAAaD,KAAKX,KAAWV,GADtC,2CAAZ,uDAKbuB,IA1EM,WAAmC,IAAlCC,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACnD,OAAQA,EAAOvB,MACX,IAlBqB,6BAmBjB,OAAO,EAAP,GACOsB,EADP,CAEI9B,MAAO8B,EAAM9B,MAAMgC,KAAI,SAAAC,GAInB,OAHIA,EAAEC,KAAOH,EAAOxB,SAChB0B,EAAEE,UAAYF,EAAEE,UAEbF,OAInB,IA5BU,kBA6BN,OAAO,EAAP,GAAWH,EAAX,CAAkB9B,MAAO+B,EAAO/B,QAEpC,IA9BsB,8BA+BlB,OAAO,EAAP,GAAW8B,EAAX,CAAkB7B,gBAAiB8B,EAAOX,QAE9C,IAhCiB,yBAiCb,OAAO,EAAP,GAAWU,EAAX,CAAkB3B,YAAa4B,EAAO5B,cAE1C,IAlCgB,wBAmCZ,OAAO,EAAP,GAAW2B,EAAX,CAAkB1B,WAAY2B,EAAOpB,aAEzC,IApC0B,kCAqCtB,OAAO,EAAP,GACOmB,EADP,CAEIzB,oBAAqB0B,EAAO3B,WAAP,sBACX0B,EAAMzB,qBADK,CACgB0B,EAAOxB,SACtCuB,EAAMzB,oBAAoB+B,QAAO,SAAAF,GAAE,OAAIA,IAAOH,EAAOxB,YAGnE,QACI,OAAOuB,K,oBCpDnBjC,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCC3CD,EAAOC,QAAU,CAAC,aAAe,oC,oBCAjCD,EAAOC,QAAU,CAAC,KAAO,2B,oBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B,kHCD5B,mHAEMuC,EAAWC,SAAa,CAC1BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAINzB,EAAW,CACpBC,SADoB,WACsB,IAAjCd,EAAgC,uDAAlB,EAAGD,EAAe,uDAAJ,GACjC,OAAOmC,EAASK,IAAT,qBAA2BvC,EAA3B,kBAAgDD,IAClDyC,MAAK,SAAAC,GACF,OAAOA,EAAS1B,SAG5BQ,WAPoB,SAOTnB,GACP,OAAO8B,EAASQ,KAAT,iBAAwBtC,GAAU,IACpCoC,MAAK,SAAAC,GACF,OAAOA,EAAS1B,SAG5BU,aAboB,SAaPrB,GACT,OAAO8B,EAASS,OAAT,iBAA0BvC,IAC5BoC,MAAK,SAAAC,GACF,OAAOA,EAAS1B,SAG5B6B,WAnBoB,SAmBTxC,GAEP,OADAyC,QAAQC,KAAK,0CACNC,EAAWH,WAAWxC,KAIxB2C,EAAa,CACtBH,WADsB,SACXxC,GACP,OAAO8B,EAASK,IAAT,kBAAwBnC,IAC1BoC,MAAK,SAAAC,GACF,OAAOA,EAAS1B,SAG5BiC,UAPsB,SAOZ5C,GACN,OAAO8B,EAASK,IAAT,0BAAgCnC,KAE3C6C,aAVsB,SAUTC,GACT,OAAOhB,EAASiB,IAAT,mBAAiC,CAACD,OAAQA,KAErDE,gBAbsB,SAaNC,GACZ,OAAOnB,EAASiB,IAAT,YAA0BE,IAErCC,WAhBsB,SAgBXC,GACP,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClBrB,EAASiB,IAAT,kBAAgCK,EAAU,CAC7ClB,QAAS,CACL,eAAgB,2BAMnBqB,EAAU,CACnBC,GADmB,WAEf,OAAO1B,EAASK,IAAT,aAEXsB,MAJmB,SAIbC,EAAOC,EAAUC,GACnB,OAAO9B,EAASQ,KAAT,cAA6B,CAACoB,QAAOC,WAAUC,gBAE1DC,OAPmB,WAQf,OAAO/B,EAASS,OAAT,kB,sDC1DKuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uoBCfN,IAAMC,EAAW,mBAKX3E,EAAe,CACjB4E,MAAO,CACH,CACIzC,GAAI,EACJ0C,SAAU,mBACVC,OAAQ,iBACRC,KAAM,WACNC,WAAY,OAEhB,CACI7C,GAAI,EACJ0C,SAAU,mBACVC,OAAQ,iBACRC,KAAM,kJACNC,WAAY,OAGpBC,QAAS,KACT3B,OAAQ,IA4CC4B,EAAY,SAAC5B,GAAD,MAAa,CAAC7C,KAjEpB,qBAiEsC6C,WAI5C6B,EAAiB,SAAC3E,GAAD,8CAAY,WAAOO,GAAP,eAAAC,EAAA,sEACnBC,IAAS+B,WAAWxC,GADD,OAChCW,EADgC,OAEtCJ,EARwC,CAACN,KAhEpB,2BAgE4CwE,QAQzC9D,IAFc,2CAAZ,uDAsCfiE,EAnFQ,WAAmC,IAAlCrD,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACrD,OAAQA,EAAOvB,MACX,KAAKkE,EACD,IAAMU,EAAO,IAAIC,KACXC,EAAYF,EAAKG,qBAAqBC,QAAQ,MAAO,KACrDC,EAAYL,EAAKM,qBAAqBC,MAAM,EAAG,GAC/CC,EAAU,CACZ1D,IAAKJ,EAAM6C,MAAM,GAAGzC,GAAK,EACzB0C,SAAS,GAAD,OAAKU,EAAL,YAAkBG,GAC1BZ,OAAQ9C,EAAO8D,UAAY,wBAC3Bf,KAAM/C,EAAO+D,YACbf,WAAY,GAEhB,OAAO,EAAP,GAAWjD,EAAX,CAAkB6C,MAAM,CAAEiB,GAAH,mBAAe9D,EAAM6C,UAGhD,IAzCiB,2BA0Cb,OAAO,EAAP,GACO7C,EADP,CAEIkD,QAASjD,EAAOiD,UAExB,IA7CW,qBA8CP,OAAO,EAAP,GACOlD,EADP,CAEIuB,OAAQtB,EAAOsB,SAEvB,IAjDW,aAkDP,OAAO,EAAP,GACOvB,EADP,CAEIkD,QAAQ,EAAD,GAAMlD,EAAMkD,QAAZ,CAAqBe,OAAQhE,EAAOgE,WAGnD,QACI,OAAOjE,I,yjBC9DnB,IAEI/B,EAAe,CACfiG,QAAS,CACL,CACIC,KAAM,YACNC,QAAS,UACTC,QAAS,MAGjBC,SAAU,CACN,CACIlE,GAAI,EACJmE,QAAS,uDACTF,QAAS,KAgCNG,EA3BS,WAAmC,IAAlCxE,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACtD,OAAQA,EAAOvB,MAEX,IAAK,cACD,IAAI+F,EAAa,CACbrE,IAAKJ,EAAMsE,SAAStE,EAAMsE,SAASI,OAAS,GAAGtE,GAAK,EACpDuE,UAAW,IACXJ,QAAStE,EAAO2E,iBAEhBC,EAAS,KACN7E,EADM,CAETsE,SAAS,YAAKtE,EAAMsE,YAKxB,MAHiC,KAA7BO,EAAUC,gBACVD,EAAUP,SAASS,KAAKN,GAErBI,EAEX,QACI,OAAO7E,I,kkBCnCnB,IAEI/B,EAAe,CACfQ,OAAQ,KACR0D,MAAO,KACP6C,MAAO,KACPC,QAAQ,GAgBCC,EAAkB,SAACzG,EAAQ0D,EAAO6C,EAAOC,GAAvB,MAAmC,CAC9DvG,KAvBkB,qBAuBGU,KAAM,CAACX,SAAQ0D,QAAO6C,QAAOC,YAGzCE,EAAkB,yDAAM,WAAOnG,GAAP,uBAAAC,EAAA,sEACZ+C,IAAQC,KADI,OAEA,KAD7BnB,EAD6B,QAEpB1B,KAAKO,aAAmB,EACRmB,EAAS1B,KAAKA,KAAlCgB,EAD2B,EAC3BA,GAAI+B,EADuB,EACvBA,MAAO6C,EADgB,EAChBA,MAChBhG,EAASkG,EAAgB9E,EAAI+B,EAAO6C,GAAO,KAJd,2CAAN,uDAyBhBI,EA1CK,WAAmC,IAAlCpF,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCAClD,OAAQA,EAAOvB,MAEX,IAZc,qBAaV,OAAO,KACAsB,EADP,GAEOC,EAAOb,MAElB,QACI,OAAOY,I,kkBClBnB,IAEI/B,EAAe,CACfoH,aAAa,GA0BFC,EAvBI,WAAmC,IAAlCtF,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACjD,OAAQA,EAAOvB,MAEX,IATgB,kBAUZ,OAAO,KACAsB,EADP,CAEIqF,aAAa,IAErB,QACI,OAAOrF,I,yjBClBnB,IAII/B,EAAe,CACfsH,YAAa,CACTC,WAAY,QACZC,OAAQ,UACRC,MAAO,UACPC,WAAY,mBACZC,aAAc,qBACdC,SAAU,mBACVC,UAAW,oBACXC,YAAa,QACbC,SAAU,oBACVC,cAAe,SAgERC,EA5DM,WAAmC,IAAlClG,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACnD,OAAQA,EAAOvB,MACX,IArBS,WAsBL,OAAO,KACAsB,EADP,CAEIuF,YAAa,CACTC,WAAY,QACZC,OAAQ,UACRC,MAAO,UACPC,WAAY,mBACZC,aAAc,qBACdC,SAAU,mBACVC,UAAW,oBACXC,YAAa,QACbC,SAAU,oBACVC,cAAe,UAG3B,IAnCU,YAoCN,OAAO,KACAjG,EADP,CAEIuF,YAAa,CACTC,WAAY,QACZC,OAAQ,UACRC,MAAO,qBACPC,WAAY,mBACZC,aAAc,qBACdC,SAAU,mBACVC,UAAW,oBACXC,YAAa,MACbC,SAAU,oBACVC,cAAe,UAG3B,IApDS,WAqDL,OAAO,KACAjG,EADP,CAEIuF,YAAa,CACTC,WAAY,QACZC,OAAQ,UACRC,MAAO,UACPC,WAAY,mBACZC,aAAc,qBACdC,SAAU,UACVC,UAAW,oBACXC,YAAa,SACbC,SAAU,QACVC,cAAe,UAG3B,QACI,OAAOjG,IC3DfmG,EAAWC,YAAgB,CAC3BC,YAAahD,EACbiD,aAAc9B,EACd+B,UAAWxG,IACXyG,KAAMpB,EACNqB,KAAMC,IACNC,IAAKrB,EACLsB,MAAOV,IAELW,EAAmBrE,OAAOsE,sCAAwCC,IAClEC,EAAQC,YAAYd,EAAUU,EAAiBK,YAAgBC,OACrE3E,OAAOwE,MAAQA,EACAA,Q,yPCwCAI,GAxDA,SAACC,GAAW,IAAD,EACgBC,mBAAS,QADzB,oBACjBC,EADiB,KACHC,EADG,OAEoBF,mBAAS,QAF7B,oBAEjBG,EAFiB,KAEDC,EAFC,KAuBtB,OAJAC,qBAAU,WACNH,EAAgBD,GAChBG,EAAkBD,KACnB,CAACF,EAAcE,IAEd,kBAAC,KAAD,CAAQG,GAAIL,EAAcM,QAASJ,EAAgBK,OAAO,KAAKC,UAAU,QACrE,kBAAC,KAAOC,MAAR,CAAcC,KAAK,SAAnB,4BACA,yBAAKC,IAAI,OAAOC,IAAKC,KAAWC,MAAO,CAACC,MAAO,IAAKP,UAAU,SAC9D,yBAAKG,IAAI,OAAOC,IAAKI,KAAWF,MAAO,CAACC,MAAO,IAAKP,UAAU,SAC9D,yBAAKG,IAAI,OAAOC,IAAKK,KAAeH,MAAO,CAACC,MAAO,IAAKP,UAAU,SAClE,kBAAC,KAAOU,OAAR,CAAeC,gBAAc,qBAC7B,kBAAC,KAAOC,SAAR,CAAiBvI,GAAG,oBAChB,kBAACwI,GAAA,EAAD,CAAKb,UAAU,WACX,kBAACc,GAAA,EAAD,CAAaC,MAAM,QAAQf,UAAU,OAAO3H,GAAG,sBAC3C,kBAACyI,GAAA,EAAYE,KAAb,CAAkBC,QAxBhB,WAClB3B,EAAM4B,gBACNzB,EAAgB,SAChBE,EAAkB,WAqBF,YAAqD,uBACjDK,UAAU,oBACd,kBAACc,GAAA,EAAYE,KAAb,CAAkBC,QA/BjB,WACjB3B,EAAM6B,eACN1B,EAAgB,QAChBE,EAAkB,UA4BF,WAAmD,uBAC/CK,UAAU,oBACd,kBAACc,GAAA,EAAYE,KAAb,CAAkBC,QAvBjB,WACjB3B,EAAM8B,eACN3B,EAAgB,WAChBE,EAAkB,WAoBF,WAAmD,uBAC/CK,UAAU,sBAGtB,kBAACqB,GAAA,EAAD,CAAMC,QAAM,GACPhC,EAAMpC,OACH,6BACI,kBAACqE,GAAA,EAAD,CAAQzB,QAAQ,UAAUmB,QAAS3B,EAAM/E,QAAzC,YAEJ,6BACI,kBAAC,IAAD,CAASiH,GAAG,SAASC,gBAAgB,cAAa,kBAACF,GAAA,EAAD,CAAQzB,QAAQ,WAAhB,gBChDxE4B,G,iLAEE,OACI,6BACI,kBAAC,GAAWC,KAAKrC,Y,GAJHsC,IAAMC,WAmBrBC,gBARS,SAAC7J,GACrB,MAAO,CACHiF,OAAQjF,EAAMwG,KAAKvB,OACnBD,MAAOhF,EAAMwG,KAAKxB,MAClB8E,OAAQ9J,EAAM4G,MAAMrB,eAIY,CAACjD,OLqBnB,yDAAM,WAAOtD,GAAP,SAAAC,EAAA,sEACH+C,IAAQM,SADL,OAES,IAFT,OAEXlD,KAAKO,YACdX,EAASkG,EAAgB,KAAM,KAAM,MAAM,IAHvB,2CAAN,uDKrB2BgE,aHiDrB,iBAAO,CAACxK,KA1EnB,aGyB8CuK,cHkDlC,iBAAO,CAACvK,KAzEnB,cGuB4DyK,aHmDlD,iBAAO,CAACzK,KA3EnB,cGwBFmL,CAA8EJ,I,wfCvBtF,IAAMM,GAAcC,KAAOC,IAAV,MAEJ,SAAC5C,GAAD,OAAWA,EAAMyC,OAAOrE,UACnC,SAAC4B,GAAD,OAAWA,EAAMyC,OAAOjE,YAEb,SAACwB,GAAD,OAAWA,EAAMyC,OAAOtE,cASjC,SAAC6B,GAAD,OAAWA,EAAMyC,OAAOhE,aAaxB,SAACuB,GAAD,OAAWA,EAAMyC,OAAOjE,YAGxB,SAACwB,GAAD,OAAWA,EAAMyC,OAAO/D,eCIpB8D,gBALO,SAAC7J,GACnB,MAAO,CACH8J,OAAQ9J,EAAM4G,MAAMrB,eAGbsE,EA9BA,SAACxC,GACZ,OACI,kBAAC0C,GAAD,CAAaD,OAAQzC,EAAMyC,QACvB,yBAAK/B,UAAU,OACX,wBAAIA,UAAU,QACV,4BACI,kBAAC,IAAD,CAASA,UAAU,OAAOwB,GAAG,WAAWC,gBAAgB,cAAxD,eAEJ,4BACI,kBAAC,IAAD,CAASzB,UAAU,OAAOwB,GAAG,WAAWC,gBAAgB,cAAxD,aAEJ,4BACI,kBAAC,IAAD,CAASzB,UAAU,OAAOwB,GAAG,eAAeC,gBAAgB,cAA5D,gBAEJ,4BACI,kBAAC,IAAD,CAASzB,UAAU,OAAOwB,GAAG,QAAQC,gBAAgB,cAArD,SAEJ,4BACI,kBAAC,IAAD,CAASzB,UAAU,OAAOwB,GAAG,SAASC,gBAAgB,cAAtD,gB,quDCtBjB,IAAMU,GAASF,KAAOG,KAAV,MACP,SAAC9C,GAAD,OAAWA,EAAM+C,SAAW,aAC3B,SAAC/C,GAAD,OAAWA,EAAM9F,OAAS,EAAI,MAE9B8I,GAAcL,KAAOC,IAAV,MAQX,SAAC5C,GAAD,OAAWA,EAAMyC,OAAO9D,YAc1B,SAACqB,GAAD,OAAWA,EAAMyC,OAAOhE,aAItBwE,GAAeN,KAAOC,IAAV,MAOH,SAAC5C,GAAD,OAAWA,EAAMyC,OAAOtE,cAExB,SAAC6B,GAAD,OAAWA,EAAMyC,OAAOrE,UACnC,SAAC4B,GAAD,OAAWA,EAAMyC,OAAOhE,aAGb,SAACuB,GAAD,OAAWA,EAAMyC,OAAOtE,cAOnC,SAAC6B,GAAD,OAAWA,EAAMyC,OAAOhE,aAIxB,SAACuB,GAAD,OAAWA,EAAMyC,OAAOhE,aAGzB,SAACuB,GAAD,OAAWA,EAAMyC,OAAOjE,YAOZ,SAACwB,GAAD,OAAWA,EAAMyC,OAAOrE,UACnC,SAAC4B,GAAD,OAAWA,EAAMyC,OAAOhE,aAUb,SAACuB,GAAD,OAAWA,EAAMyC,OAAOpE,SAGjC6E,GAAmBP,KAAOC,IAAV,M,kDCvCdO,GArCe,SAACnD,GAAW,IAAD,EACPC,oBAAS,GADF,oBAChCmD,EADgC,KACtBC,EADsB,OAUXpD,mBAASD,EAAM9F,QAVJ,oBAUhCA,EAVgC,KAUxB4B,EAVwB,KAmBrC,OAJAwE,qBAAU,WACNxE,EAAUkE,EAAM9F,UACjB,CAAC8F,EAAM9F,SAGN,qCACMkJ,GAAYpD,EAAM+C,SACpB,yBAAKpB,QApBY,WACrB0B,GAAY,KAoBJ,kBAACR,GAAD,CAAQ3I,OAAQ8F,EAAM9F,OACd6I,QAAS/C,EAAM+C,SAAU7I,GAAW8F,EAAM+C,SAAW,yBAGhEK,GAAYpD,EAAM+C,SACnB,6BACI,2BAAOrC,UAAU,eAAe4C,WAAW,EAAMC,SAlBtC,SAACC,GACpB1H,EAAU0H,EAAEC,cAAcC,QAiByDA,MAAOxJ,EAC3EyJ,OAzBQ,WACvBN,GAAY,GACZrD,EAAM/F,aAAaC,SCNd0J,GAAc,SAAC,GAA8C,IAA7C/H,EAA4C,EAA5CA,QAASkH,EAAmC,EAAnCA,QAAS7I,EAA0B,EAA1BA,OAAQD,EAAkB,EAAlBA,aACnD,OACI,yBAAKyG,UAAU,wBACX,4BAAK7E,EAAQgI,UACb,kBAAC,GAAD,CAAuB3J,OAAQA,EAAQD,aAAcA,EAAc8I,QAASA,IAC5E,kBAACe,GAAA,EAAD,CAAOpD,UAAU,SACb,yDAGA,+BACA,4BACI,yCACA,4BAAK7E,EAAQkI,UAEjB,4BACI,+CACA,4BAAKlI,EAAQmI,eAAiB,MAAQ,OAE1C,4BACI,sDACA,4BAAKnI,EAAQoI,8BAKrB,kBAACC,GAAA,EAAD,CAAWC,iBAAiB,KACxB,kBAACC,GAAA,EAAD,KACI,kBAACF,GAAA,EAAU9C,OAAX,CAAkBiD,GAAID,KAAKrE,OAAQuE,SAAS,KAA5C,iBAGA,kBAACJ,GAAA,EAAU5C,SAAX,CAAoBgD,SAAS,KACzB,kBAACR,GAAA,EAAD,KACI,+BACCS,OAAOC,KAAK3I,EAAQ4I,UAAU5L,KAAI,SAAA6L,GAC/B,OAAO,kBAAC,GAAD,CAASA,IAAKA,EAAKC,aAAcD,EAAKE,aAAc/I,EAAQ4I,SAASC,eAWtGG,GAAU,SAAC,GAAkC,IAAjCF,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OACI,4BACI,4BAAKD,EAAL,KACA,4BAAI,uBAAG/D,KAAMgE,GAAeA,M,kDChDlCE,GAAe,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACrCC,EAAWF,GAASD,EAC1B,OACI,yBAAKtE,UAAWyE,EAAUC,KAAEH,MAAQ,IAC/BC,EACAC,GAAW,8BAAOF,KAKlBI,GAAW,SAACrF,GAAW,IACzBsF,EAA6BtF,EAA7BsF,MAAOP,EAAsB/E,EAAtB+E,KAASQ,EADQ,aACKvF,EADL,kBAEzBwF,EAAU,GAChB,IAAK,IAAId,KAAOK,EACZS,EAAQd,EAAIe,eAAiBV,EAAKL,GAAO,GAE7C,OAAO,kBAAC,GAAiB1E,EAAO,8CAAcsF,EAAWE,EAAaD,MAG7DG,GAAQ,SAAC1F,GAAW,IACtBsF,EAA6BtF,EAA7BsF,MAAOP,EAAsB/E,EAAtB+E,KAASQ,EADK,aACQvF,EADR,kBAEtBwF,EAAU,GAChB,IAAK,IAAId,KAAOK,EACZS,EAAQd,EAAIe,eAAiBV,EAAKL,GAAO,GAE7C,OAAO,kBAAC,GAAiB1E,EACrB,kBAAC+B,GAAA,EAAK4D,QAAN,iBAAkBL,EAAWE,EAAaD,MAIrCK,GAAc,SAACC,EAAW/I,EAAMgJ,EAAYC,EAAa1O,GAClE,OAAO,kBAAC2O,GAAA,EAAD,CAAOH,UAAWA,EAAW/I,KAAMA,EAAMmJ,SAAUH,EAAYC,YAAaA,EAAa1O,KAAMA,KCrC7F6O,GAAW,SAAAxC,GACpB,IAAIA,EACJ,MAAO,qBCuDLyC,GAAuBC,aAAU,CAAChH,KAAM,eAAjBgH,EA/CL,SAAC,GAAwD,IAAvDvK,EAAsD,EAAtDA,QAASwK,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,aAAcrB,EAAW,EAAXA,MACjE,OACI,kBAAC/B,GAAD,KACI,kBAACnB,GAAA,EAAD,CAAMrB,UAAU,OAAO6F,SAAUD,GAC5BrB,GAAS,0BAAMvE,UAAW0E,KAAEoB,cAAevB,GAC5C,+BACI,+BACA,wBAAIvE,UAAU,WACV,4BAAI,8CACJ,4BAAKkF,GAAYF,GAAO,WAAY,CAACQ,IAAW,eAEpD,wBAAIxF,UAAU,WACV,4BAAI,6CACJ,4BAAKkF,GAAYP,GAAU,UAAW,GAAI,cAE9C,wBAAI3E,UAAU,WACV,4BAAI,qDACJ,4BAAI,kBAACsF,GAAA,EAAD,CAAOH,UAAW,QAAS/I,KAAK,iBAAiBzF,KAAK,eAE9D,wBAAIqJ,UAAU,WACV,4BAAI,0DACJ,4BAAKkF,GAAYP,GAAU,4BAA6B,CAACa,IAAW,2BAI5E,kBAAChC,GAAA,EAAD,CAAWC,iBAAiB,KACxB,kBAACC,GAAA,EAAD,KACI,kBAACF,GAAA,EAAU9C,OAAX,CAAkBiD,GAAID,KAAKrE,OAAQuE,SAAS,KAA5C,iBAGA,kBAACJ,GAAA,EAAU5C,SAAX,CAAoBgD,SAAS,IAAIvL,GAAG,gBAAgB2H,UAAU,iBAC1D,+BACI,+BACC6D,OAAOC,KAAK3I,EAAQ4I,UAAU5L,KAAI,SAAA6L,GAC/B,OAAO,kBAAC,GAAD,CAASA,IAAKA,EAAKC,aAAcD,EAAKE,aAAc/I,EAAQ4I,SAASC,aAOhG,kBAACzC,GAAA,EAAD,CAAQzB,QAAQ,UAAUnJ,KAAK,UAA/B,QACA,kBAAC4K,GAAA,EAAD,CAAQzB,QAAQ,YAAYmB,QAAS0E,EAAoBrF,MAAO,CAACyF,MAAO,UAAxE,eAOHC,GAAkB,SAAC,GAAoD,IAAnD7K,EAAkD,EAAlDA,QAASwK,EAAyC,EAAzCA,mBAAoBjM,EAAqB,EAArBA,gBAK1D,OACI,kBAAC+L,GAAD,CAAsBtK,QAASA,EAAS8K,cAAe9K,EAAS0K,SALnD,SAAC/L,GACdJ,EAAgBI,GACXhB,MAAK,kBAAM6M,QAIMA,mBAAoBA,KAI5CxB,GAAU,SAAC,GAAoB,IAAnBF,EAAkB,EAAlBA,aACd,OACI,wBAAIjE,UAAU,WACV,4BAAI,8BAAOiE,EAAP,OACJ,4BAAKiB,GAAYF,GAAO,YAAcf,EAAc,GAAIA,EAAc,OCxBnEiC,GA1CY,SAAC,GAAmF,IAAlF/K,EAAiF,EAAjFA,QAASkH,EAAwE,EAAxEA,QAAS7I,EAA+D,EAA/DA,OAAQuI,EAAuD,EAAvDA,OAAQnI,EAA+C,EAA/CA,WAAYL,EAAmC,EAAnCA,aAAcG,EAAqB,EAArBA,gBAAqB,EAC5E6F,oBAAS,GADmE,oBACrGmD,EADqG,KAC3FC,EAD2F,KAQ1G,IAAKxH,EACD,OAAO,kBAAC,KAAD,MAOX,OACI,kBAACoH,GAAD,CAAcR,OAAQA,GAClB,yBAAK/B,UAAU,yBACX,6BACI,yBAAKA,UAAU,SAASG,IAAI,SACvBC,IAAKjF,EAAQe,OAAOiK,OAASC,KAAS7F,MAAM,UAChD8B,GACD,kBAACC,GAAD,CAAaO,SAZD,SAACC,GACrBA,EAAEuD,OAAOC,MAAM,IACf1M,EAAWkJ,EAAEuD,OAAOC,MAAM,KAU0BvE,OAAQA,GAChD,2BAAO/B,UAAU,eAAjB,eAA2C,2BAAOrJ,KAAK,WACrD+L,GAAY,0BAAM1C,UAAU,aAAaiB,QAvBtC,WACrB0B,GAAY,KAsBkB,uBAKrBD,EAAW,kBAAC,GAAD,CAAiBvH,QAASA,EACTwK,mBA1Bd,WACvBhD,GAAY,IA0ByBjJ,gBAAiBA,IAC1C,kBAAC,GAAD,CAAayB,QAASA,EACT3B,OAAQA,EACRD,aAAcA,EACd8I,QAASA,O,mfC1C1C,IA8BekE,GA9BOtE,KAAOC,IAAV,MAMG,SAAC5C,GAAD,OAAWA,EAAMyC,OAAOrE,UACxB,SAAC4B,GAAD,OAAWA,EAAMyC,OAAOtE,cAEnC,SAAC6B,GAAD,OAAWA,EAAMyC,OAAOjE,YAaxB,SAACwB,GAAD,OAAWA,EAAMyC,OAAOjE,YAKxB,SAACwB,GAAD,OAAWA,EAAMyC,OAAOhE,a,oBCrB7ByI,G,2LAEE,IAAI9P,EAASiL,KAAKrC,MAAM1E,MAAM6L,OAAO/P,OAChCA,IACDA,EAASiL,KAAKrC,MAAMoH,eAGxB/E,KAAKrC,MAAMjE,eAAe3E,K,0CAI1BiL,KAAKgF,qB,yCAGUC,EAAWC,EAAWC,GACjCF,EAAUhM,MAAM6L,OAAO/P,SAAWiL,KAAKrC,MAAM1E,MAAM6L,OAAO/P,QAC1DiL,KAAKgF,qB,+BAKT,OAAKhF,KAAKrC,MAAMnE,QAQZ,yBAAK6E,UAAW0E,KAAEqC,WACd,yBAAK/G,UAAW0E,KAAEsC,OAAQ7G,IAAI,SAASC,IAAKuB,KAAKrC,MAAMnE,QAAQe,OAAO+K,OAASb,KAAS7F,MAAM,UAP9F,yBAAKP,UAAW0E,KAAEqC,WACd,yBAAK/G,UAAW0E,KAAEsC,OAAQ7G,IAAI,SAASC,IAAKgG,KAAS7F,MAAM,c,GAxBvDqB,IAAMC,WAwCf7C,eACX8C,aALkB,SAAC7J,GAAD,MAAY,CAC9BkD,QAASlD,EAAMqG,YAAYnD,QAC3BuL,cAAezO,EAAMwG,KAAK/H,UAGD,CAAC2E,mBAC1B6L,KAFWlI,CAECwH,IC1BDW,GApBF,SAAC7H,GACV,OACI,kBAAC,GAAD,CAAeyC,OAAQzC,EAAMyC,QACzB,yBAAK/B,UAAU,WACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,aACX,8BAAOV,EAAMtE,QACb,8BAAOsE,EAAMvE,YAGrB,yBAAKiF,UAAU,WACVV,EAAMrE,MAEX,yBAAK+E,UAAU,cACX,8BAAOV,EAAMpE,WAAb,aCHDkM,GAXDxF,IAAMyF,MAAK,SAAA/H,GACrB,IAAIgI,EAAgBhI,EAAMxE,MAAM3C,KAAI,SAACoP,GAAD,OAAO,kBAAC,GAAD,CAAMvD,IAAKuD,EAAElP,GAAI0C,SAAUwM,EAAExM,SACvBC,OAAQuM,EAAEvM,OAAQC,KAAMsM,EAAEtM,KAAMC,WAAYqM,EAAErM,WAC9C6G,OAAQzC,EAAMyC,YAC/D,OACI,6BACKuF,M,0YCRb,IPGiCE,GAKAC,GOkBlBC,GA1BUzF,KAAOC,IAAV,MAIA,SAAC5C,GAAD,OAAWA,EAAMyC,OAAOrE,UACxB,SAAC4B,GAAD,OAAWA,EAAMyC,OAAOtE,cCExCkK,IRJ2BH,GQIW,GRJG,SAACxE,GAC5C,GAAIA,GAASA,EAAMrG,OAAS6K,GAAW,MAAM,iBAAN,OAAwBA,GAAxB,cQIrCI,IRA2BH,GQAW,ERAG,SAACzE,GAC5C,GAAIA,GAASA,EAAMrG,OAAS8K,GAAW,MAAM,iBAAN,OAAwBA,GAAxB,cQYrCI,GAAmBnC,aAAU,CAAChH,KAAM,WAAjBgH,EAZL,SAACpG,GAKjB,OAAQ,0BAAMuG,SAJQ,SAACxO,GACnBiI,EAAMsG,aAAavO,GACnBiI,EAAMwI,UAGN,kBAACxC,GAAA,EAAD,CAAOtF,UAAU,eAAemF,UAAWR,GAAUvI,KAAK,UAAUiJ,YAAY,0BACzEE,SAAU,CAACC,GAAUmC,GAAoBC,MAChD,kBAACrG,GAAA,EAAD,CAAQ5K,KAAK,SAASmJ,QAAQ,SAA9B,YAMK4H,GAAmB,SAACpI,GAC7B,OACI,kBAAC,GAAD,CAAeyC,OAAQzC,EAAMyC,QACzB,yBAAK/B,UAAU,WACX,kBAAC,GAAD,MACA,kBAAC6H,GAAD,CAAkBhC,SAAUvG,EAAMuG,cClBnCkC,GATQnG,IAAMyF,MAAK,SAAA/H,GAI9B,OACI,kBAAC,GAAD,CAAkByC,OAAQzC,EAAMyC,OAAQ8D,SAJ5B,SAAC/L,GACbwF,EAAM0I,QAAQlO,EAASmO,QAAS3I,EAAMnE,QAAQgI,gBCqBvC+E,GArBC,SAAC,GAAmG,IAAlG/M,EAAiG,EAAjGA,QAAS3B,EAAwF,EAAxFA,OAAQD,EAAgF,EAAhFA,aAAcyO,EAAkE,EAAlEA,QAASlN,EAAyD,EAAzDA,MAAOiH,EAAkD,EAAlDA,OAAQM,EAA0C,EAA1CA,QAASzI,EAAiC,EAAjCA,WAAYF,EAAqB,EAArBA,gBAC1F,OACI,8BACI,kBAAC,GAAD,CAAoB2I,QAASA,EACTzI,WAAYA,EACZuB,QAASA,EACT3B,OAAQA,EACRD,aAAcA,EACdwI,OAAQA,EACRrI,gBAAiBA,IACpC2I,GACD,kBAAC,GAAD,CAAS2F,QAASA,EAASjG,OAAQA,EAC1B5G,QAASA,IAEjBkH,GACD,kBAAC,GAAD,CAAOvH,MAAOA,EAAOiH,OAAQA,MChBrCoG,GAAiC,SAAClQ,GAAD,MAAY,CAC7CiF,OAAQjF,EAAMwG,KAAKvB,SAGVkL,GAAmB,SAACvG,GAAe,IACtCwG,EADqC,iLAGnC,OAAK1G,KAAKrC,MAAMpC,OAGT,kBAAC2E,EAAcF,KAAKrC,OAFhB,kBAAC,KAAD,CAAUkC,GAAG,eAJW,GACXI,IAAMC,WAUtC,OADqCC,YAAQqG,GAARrG,CAAwCuG,ICF3EC,G,yLAEE,IAAI5R,EAASiL,KAAKrC,MAAM1E,MAAM6L,OAAO/P,OAChCA,IACDA,EAASiL,KAAKrC,MAAMoH,eAExB/E,KAAKrC,MAAMjE,eAAe3E,GAC1BiL,KAAKrC,MAAMiJ,cAAc7R,K,0CAIzBiL,KAAK6G,mB,yCAGU5B,EAAWC,EAAWC,GACjCF,EAAUhM,MAAM6L,OAAO/P,SAAWiL,KAAKrC,MAAM1E,MAAM6L,OAAO/P,QAC1DiL,KAAK6G,mB,+BAKT,OACI,kBAAC,GAAD,iBAAa7G,KAAKrC,MAAlB,CACS+C,SAAUV,KAAKrC,MAAM1E,MAAM6L,OAAO/P,c,GAvBxBkL,IAAMC,WAwCtB7C,eACX8C,aAZkB,SAAC7J,GAAD,MAAY,CAC9BkD,QAASlD,EAAMqG,YAAYnD,QAC3BL,MAAO7C,EAAMqG,YAAYxD,MACzBtB,OAAQvB,EAAMqG,YAAY9E,OAC1BiP,YAAaxQ,EAAMqG,YAAYmK,YAC/B/B,cAAezO,EAAMwG,KAAK/H,OAC1BwG,OAAQjF,EAAMwG,KAAKvB,OACnB6E,OAAQ9J,EAAM4G,MAAMrB,YACpB9D,gBAAiBzB,EAAMqG,eAIE,CAAC0J,Q1BSP,SAAC/L,EAAaD,GAAd,MAA4B,CAACrF,KAAMkE,EAAUoB,cAAaD,a0BT1CX,iBAAgBkN,c1BsB1B,SAAC7R,GAAD,8CAAY,WAAOO,GAAP,eAAAC,EAAA,sEACdmC,IAAWC,UAAU5C,GADP,OAC/BqC,EAD+B,OAErC9B,EAASmE,EAAUrC,EAAS1B,OAFS,2CAAZ,uD0BtByCkC,a1B2B1C,SAACC,GAAD,8CAAY,WAAOvC,GAAP,SAAAC,EAAA,sEACbmC,IAAWE,aAAaC,GADX,OAEH,IAFG,OAEvBnC,KAAKO,WACdX,EAASmE,EAAU5B,IAEnBL,QAAQuP,IAAI,wBALoB,2CAAZ,uD0B3BwD9O,W1BoC1D,SAACC,GAAD,8CAAW,WAAO5C,GAAP,eAAAC,EAAA,sEACVmC,IAAWO,WAAWC,GADZ,OAEK,KADhCd,EAD2B,QAEpB1B,KAAKA,KAAKO,WACnBX,EAxBqC,CAACN,KAlE3B,aAkE6CuF,OAwB9BnD,EAAS1B,KAAK6E,SAExC/C,QAAQuP,IAAI,wBALiB,2CAAX,uD0BpCsEhP,gB1B6CjE,SAACI,GAAD,8CAAc,WAAO7C,EAAU0R,GAAjB,iBAAAzR,EAAA,sEAClBmC,IAAWK,gBAAgBI,GADT,UACnCf,EADmC,OAEnCrC,EAASiS,IAAWlK,KAAK/H,OACE,IAA7BqC,EAAS1B,KAAKO,WAHuB,gBAIrCX,EAASoE,EAAe3E,IAJa,8BAMrCO,EAAS2R,YAAW,cAAe,CAACC,OAAQ9P,EAAS1B,KAAKkF,SAAS,MAN9B,kBAO9BuM,QAAQC,OAAOhQ,EAAS1B,KAAKkF,SAAS,KAPR,4CAAd,2D0B5C3B2K,KACAkB,GAHWpJ,CAGOsJ,I,oXCzDtB,IAqBeU,GArBC/G,KAAOC,IAAV,MAUF,SAAC5C,GAAD,OAAWA,EAAMyC,OAAOhE,aAGb,SAACuB,GAAD,OAAWA,EAAMyC,OAAOrE,UACxB,SAAC4B,GAAD,OAAWA,EAAMyC,OAAOtE,cAInC,SAAC6B,GAAD,OAAWA,EAAMyC,OAAOjE,Y,0CCPpBmL,GATI,SAAC3J,GAChB,IAAI4J,EAAO,YAAc5J,EAAMjH,GAC/B,OACI,kBAAC,IAAD,CAASmJ,GAAI0H,EAAMlJ,UAAW0E,KAAEyE,MAC3B7J,EAAMlD,KAAO,IAAMkD,EAAMjD,UCOvB+M,GAVK,SAAC9J,GACjB,IAAI+J,EAAmB/J,EAAMnD,QACxBhE,KAAI,SAAAmR,GAAC,OAAI,kBAAC,GAAD,CAAYlN,KAAMkN,EAAElN,KAAMC,QAASiN,EAAEjN,QAAS2H,IAAKsF,EAAEhN,aACnE,OACI,yBAAK0D,UAAW0E,KAAE6E,cACbF,I,0CCHEG,GAJC,SAAClK,GACb,OAAO,yBAAKU,UAAW0E,KAAElI,SAAU8C,EAAM9C,UCa9BiN,GAZE,SAACnK,GACd,IAAIoK,EAAoBpK,EAAM/C,SACzBpE,KAAI,SAAAwR,GAAC,OAAI,kBAAC,GAAD,CAAS3F,IAAK2F,EAAEtR,GAAImE,QAASmN,EAAEnN,QACtBI,UAAW+M,EAAE/M,eAEpC,OACI,yBAAKoD,UAAW0E,KAAEnI,UACbmN,ICUEE,GAhBC,SAACtK,GAIb,OACI,6BACI,kBAAC,GAAD,CAAeyC,OAAQzC,EAAMyC,QACzB,kBAAC,GAAD,CAAa5F,QAASmD,EAAMnD,UAC5B,kBAAC,GAAD,CAAUI,SAAU+C,EAAM/C,YAE9B,kBAAC,GAAD,CAAkBwF,OAAQzC,EAAMyC,OAAQ8D,SAT1B,SAAC/L,GACnBwF,EAAMuK,YAAY/P,EAASmO,cCcpBjJ,eACX8C,aAhBoB,SAAC7J,GAAD,MAAY,CAChCkE,QAASlE,EAAMsG,aAAapC,QAC5BI,SAAUtE,EAAMsG,aAAahC,SAC7BQ,eAAgB9E,EAAMsG,aAAaxB,eACnCgF,OAAQ9J,EAAM4G,MAAMrB,gBAGG,SAACvG,GACxB,MAAO,CACH4S,YAAa,SAAChN,GACV5F,EhCyB2B,SAAC4F,GAAD,MAAsB,CACzDlG,KA3CgB,cA2CGkG,mBgC1BFiN,CAAwBjN,SAOzCuL,GAFWpJ,CAGb4K,ICIIG,GAAiBrE,aAAU,CAAChH,KAAM,SAAjBgH,EAnBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcrB,EAAW,EAAXA,MAC9B,OACI,kBAAClD,GAAA,EAAD,CAAMwE,SAAUD,GACZ,kBAACvE,GAAA,EAAK2I,MAAN,CAAYC,UAAU,kBAClB,kBAAC5I,GAAA,EAAK6I,MAAN,sBACChF,GAAYF,GAAO,QAAS,CAACQ,IAAW,SACzC,kBAACnE,GAAA,EAAK8I,KAAN,CAAWnK,UAAU,cAArB,mDAEJ,kBAACqB,GAAA,EAAK2I,MAAN,CAAYC,UAAU,qBAClB,kBAAC5I,GAAA,EAAK6I,MAAN,iBACChF,GAAYF,GAAO,WAAY,CAACQ,IAAW,WAAY,aAG3DjB,GAAS,0BAAMvE,UAAW0E,KAAEoB,cAAevB,GAE5C,kBAAChD,GAAA,EAAD,CAAQzB,QAAQ,UAAUnJ,KAAK,UAA/B,cAsBGmL,gBAHS,SAAC7J,GAAD,MAAY,CAChCiF,OAAQjF,EAAMwG,KAAKvB,UAEiB,CAAC/C,MhCVpB,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAOrD,GAAP,eAAAC,EAAA,sEAC7B+C,IAAQE,MAAMC,EAAOC,EAAUC,GADF,OAEjB,KAD7BvB,EAD8C,QAErC1B,KAAKO,WACdX,EAASmG,KAETnG,EAAS2R,YAAW,QAAS,CAACC,OAAQ9P,EAAS1B,KAAKkF,SAAS,MALf,2CAAjC,wDgCUNuF,EAhBD,SAACxC,GAIX,OAAqB,IAAjBA,EAAMpC,OACC,kBAAC,KAAD,CAAUsE,GAAI,aAGrB,6BACI,kBAACuI,GAAD,CAAgBlE,SARP,SAAC/L,GACdwF,EAAMnF,MAAML,EAASM,MAAON,EAASO,SAAUP,EAASQ,mB,wRC/BzD,IAAM8P,GAAkBnI,KAAOoI,OAAV,MAEN,SAAC/K,GAAD,OAAWA,EAAMyC,OAAOrE,UACnC,SAAC4B,GAAD,OAAWA,EAAMyC,OAAO9D,YAIxB,SAACqB,GAAD,OAAWA,EAAMyC,OAAOhE,aAMxB,SAACuB,GAAD,OAAWA,EAAMyC,OAAOjE,YAGxB,SAACwB,GAAD,OAAWA,EAAMyC,OAAOhE,aCsCpB+D,gBALO,SAAC7J,GACnB,MAAO,CACH8J,OAAQ9J,EAAM4G,MAAMrB,eAGbsE,EAnDA,SAACxC,GACZ,OACI,kBAAC8K,GAAD,CAAiBrI,OAAQzC,EAAMyC,QAC3B,yBAAK/B,UAAU,iBACX,kBAACsK,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZ,wCACA,wBAAI1K,UAAU,iBACV,4BAAI,uBAAGE,KAAK,MAAR,wBACJ,4BAAI,uBAAGA,KAAK,MAAR,2BACJ,4BAAI,uBAAGA,KAAK,MAAR,4BACJ,4BAAI,uBAAGA,KAAK,MAAR,4BAGZ,kBAACsK,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZ,wCACA,wBAAI1K,UAAU,iBACV,4BAAI,uBAAGE,KAAK,MAAR,uBACJ,4BAAI,uBAAGA,KAAK,MAAR,sBACJ,4BAAI,uBAAGA,KAAK,MAAR,gCACJ,4BAAI,uBAAGA,KAAK,MAAR,oCAGZ,kBAACsK,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZ,wCACA,wBAAI1K,UAAU,iBACV,4BAAI,uBAAGE,KAAK,MAAR,+BACJ,4BAAI,uBAAGA,KAAK,MAAR,wBACJ,4BAAI,uBAAGA,KAAK,MAAR,iCACJ,4BAAI,uBAAGA,KAAK,MAAR,oCAMxB,yBAAKF,UAAU,iBACX,uBAAGA,UAAU,kBAAb,QACW,IAAIxE,MAAOmP,cADtB,wD,qBC3BVC,GAAiBhJ,IAAMiJ,MAAK,kBAAM,iCAElCC,G,4LAEEnJ,KAAKrC,MAAMyL,kB,+BAIX,OAAKpJ,KAAKrC,MAAMhC,YAIZ,yBAAK0C,UAAU,eACX,kBAAC,GAAD,MACA,kBAACsK,GAAA,EAAD,CAAWtK,UAAW0E,KAAEsG,WACpB,kBAACT,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKS,GAAI,GAAIR,GAAI,GAAG,kBAAC,GAAD,OACpB,kBAACD,GAAA,EAAD,CAAKS,GAAI,GAAIR,GAAI,GACb,6BACI,kBAAC,KAAD,CAAOvB,KAAK,oBAAoBgC,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,KAAD,CAAOhC,KAAK,WAAWgC,OAAQ,kBAAM,kBAACC,GAAD,SACrC,kBAAC,KAAD,CAAOjC,KAAK,SAASgC,QClCxBrJ,EDkC6C+I,GCjC/D,SAACtL,GACJ,OAAO,kBAAC,WAAD,CAAU8L,SAAU,qFACvB,kBAACvJ,EAAcvC,QDgCK,kBAAC,KAAD,CAAO4J,KAAK,SAASgC,OAAQ,kBAAM,kBAAC,GAAD,aAKnD,kBAAC,GAAD,OAlBG,kBAAC,KAAD,MCtBS,IAACrJ,M,GDeXD,IAAMC,WAmCTC,gBAJO,SAAC7J,GAAD,MAAY,CAC9BqF,YAAarF,EAAM2G,IAAItB,eAGa,CAACyN,clC5BZ,kBAAM,SAAC9T,GAChC,IAAIoU,EAAUpU,EAASmG,KACvB0L,QAAQwC,IAAI,CAACD,IAAUvS,MAAK,WACxB7B,EALiC,CAACN,KAnBlB,0BkCiDTmL,CAA0CgJ,IEzCzDS,IAASL,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUjM,MAAOA,GACb,kBAAC,GAAD,QAGRuM,SAASC,eAAe,SxCgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9S,MAAK,SAAA+S,GACjCA,EAAaC,iB,mByCnInB9V,EAAOC,QAAU,IAA0B,yC,mBCC3CD,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,aAAe,sC,mBCAvHD,EAAOC,QAAU,CAAC,UAAY,+B,gCCD9B,+CAkBe8V,IAbG,WACd,OACI,yBAAK/L,UAAW0E,IAAEsH,SACd,yBAAKhM,UAAW0E,IAAEuH,WACd,6BACI,kBAAC,IAAD,CAASC,UAAU,SAASpM,QAAQ,cACpC,6BAFJ,8B","file":"static/js/main.cbcf9c1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"preloader_overlay__8xjyj\",\"preloader\":\"preloader_preloader__znZXp\"};","import {usersAPI} from '../api/api'\r\n\r\nconst CHANGE_FOLLOW_STATUS = 'users/CHANGE_FOLLOW_STATUS'\r\nconst SET_USERS = 'users/SET_USERS'\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT'\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\nconst TOGGLE_FETCHING = 'users/TOGGLE_FETCHING'\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'users/TOGGLE_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 1,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_FOLLOW_STATUS:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        u.followed = !u.followed\r\n                    }\r\n                    return u\r\n                }),\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case TOGGLE_FETCHING:\r\n            return {...state, isFetching: action.isfetching}\r\n\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followStatusChange = (userId) => ({type: CHANGE_FOLLOW_STATUS, userId: userId})\r\n\r\nexport const setUsers = (userslist) => ({type: SET_USERS, users: userslist})\r\n\r\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_USERS_COUNT, count: count})\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\nexport const toggleIsFetching = (isfetching) => ({type: TOGGLE_FETCHING, isfetching})\r\n\r\nexport const toggleFollowingProgress = (isfetching, userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isfetching, userId})\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nconst follwUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) dispatch(actionCreator(userId))\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const followUser = (userId) => async (dispatch) => {\r\n    follwUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followStatusChange)\r\n}\r\n\r\nexport const unfollowUser = (userId) => async (dispatch) => {\r\n    follwUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), followStatusChange)\r\n}\r\n\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/redux-logo.aa0a3376.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap-logo.a759d587.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_items\":\"DialogItems_dialog_items__1KZrN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__1ozjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__16lM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3cKi8\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'e7349e98-057b-40d9-9127-715983016ca8'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`, {})\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('obsolete method. Use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status/`, {status: status})\r\n    },\r\n    saveProfileData(progileData) {\r\n        return instance.put(`/profile/`, progileData)\r\n    },\r\n    saveAvatar(photo) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo);\r\n        return instance.put(`/profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`)\r\n    },\r\n    logIn(email, password, rememberMe) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe})\r\n    },\r\n    logOut() {\r\n        return instance.delete(`/auth/login`)\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {usersAPI, profileAPI} from \"../api/api\"\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst ADD_POST = 'profile/ADD_POST'\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\nconst SET_AVATAR = 'SET_AVATAR'\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {\r\n            id: 2,\r\n            datetime: '04-09-2019 16:53',\r\n            author: 'Kirill Makarov',\r\n            text: 'adsasdas',\r\n            likesCount: '150'\r\n        },\r\n        {\r\n            id: 1,\r\n            datetime: '18-11-2019 20:21',\r\n            author: 'Kirill Makarov',\r\n            text: 'Post content: Lorem ipsum dolor, sit amet consectetur adipisicing elit. Eligendi sed facilis eos, dolorum enim vel distinctio doloremque molest',\r\n            likesCount: '64'\r\n        }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const date = new Date();\r\n            const localDate = date.toLocaleDateString().replace(/\\./g, '-');\r\n            const localTime = date.toLocaleTimeString().slice(0, 5);\r\n            const newPost = {\r\n                id: +state.posts[0].id + 1,\r\n                datetime: `${localDate} ${localTime}`,\r\n                author: action.userName || 'Anastacia Zavorotnyuk',\r\n                text: action.newPostBody,\r\n                likesCount: 0\r\n            }\r\n            return {...state, posts: [newPost, ...state.posts]};\r\n        }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_AVATAR:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostBody, userName) => ({type: ADD_POST, newPostBody, userName})\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const setAvatarSuccess = (photos) => ({type: SET_AVATAR, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const data = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(data))\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    } else {\r\n        console.log('error: status update')\r\n    }\r\n}\r\n\r\nexport const saveAvatar = (photo) => async (dispatch) => {\r\n    const response = await profileAPI.saveAvatar(photo)\r\n    if (response.data.data.resultCode === 0) {\r\n        dispatch(setAvatarSuccess(response.data.photos))\r\n    } else {\r\n        console.log('error: avatar update')\r\n    }\r\n}\r\n\r\nexport const saveProfileData = (formData) => async (dispatch, getState) => {\r\n    const response = await profileAPI.saveProfileData(formData);\r\n    const userId = getState().auth.userId;\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit('editProfile', {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD_MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            name: \"Alexander\",\r\n            surname: \"Pushkin\",\r\n            user_id: \"1\",\r\n        }\r\n    ],\r\n    messages: [\r\n        {\r\n            id: 1,\r\n            message: \"The less a woman we love, the easier she likes us...\",\r\n            user_id: 1\r\n        },\r\n    ],\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'ADD_MESSAGE': {\r\n            let newMessage = {\r\n                id: +state.messages[state.messages.length - 1].id + 1,\r\n                author_id: '0',\r\n                message: action.sendMessageBody,\r\n            }\r\n            let stateCopy = {\r\n                ...state,\r\n                messages: [...state.messages]\r\n            }\r\n            if (stateCopy.newMessageBody !== '') {\r\n                stateCopy.messages.push(newMessage);\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (sendMessageBody) => ({\r\n    type: ADD_MESSAGE, sendMessageBody\r\n});\r\n\r\nexport default messagesReducer;","import {authAPI} from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, data: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data //копирование деструктуризацией\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const logIn = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.logIn(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        dispatch(stopSubmit('login', {_error: response.data.messages[0]}));\r\n    }\r\n}\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n    let response = await authAPI.logOut()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","// import { authAPI } from '../api/api'\r\nimport {getAuthUserData} from './auth_reducer';\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;","const SET_DARK = 'SET_DARK'\r\nconst SET_BLUE = 'SET_BLUE'\r\nconst SET_LIGHT = 'SET_LIGHT'\r\n\r\nlet initialState = {\r\n    themeColors: {\r\n        mainBorder: \"black\",\r\n        mainBG: \"#343a40\",\r\n        subBG: \"#068063\",\r\n        followedBG: \"rgb(40, 164, 64)\",\r\n        unfollowedBG: \"rgb(228, 127, 127)\",\r\n        mainLink: \"rgb(0, 130, 102)\",\r\n        hoverLink: \"rgba(172,172,172)\",\r\n        checkedLink: \"white\",\r\n        mainText: \"rgba(109,109,109)\",\r\n        hoverMainText: \"#fff\",\r\n    }\r\n}\r\n\r\nconst themeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DARK:\r\n            return {\r\n                ...state,\r\n                themeColors: {\r\n                    mainBorder: \"black\",\r\n                    mainBG: \"#343a40\",\r\n                    subBG: \"#068063\",\r\n                    followedBG: \"rgb(40, 164, 64)\",\r\n                    unfollowedBG: \"rgb(228, 127, 127)\",\r\n                    mainLink: \"rgb(0, 130, 102)\",\r\n                    hoverLink: \"rgba(172,172,172)\",\r\n                    checkedLink: \"white\",\r\n                    mainText: \"rgba(109,109,109)\",\r\n                    hoverMainText: \"#fff\",\r\n                }\r\n            }\r\n        case SET_LIGHT:\r\n            return {\r\n                ...state,\r\n                themeColors: {\r\n                    mainBorder: \"black\",\r\n                    mainBG: \"#f8f9fa\",\r\n                    subBG: \"rgb(228, 158, 158)\",\r\n                    followedBG: \"rgb(40, 164, 64)\",\r\n                    unfollowedBG: \"rgb(228, 127, 127)\",\r\n                    mainLink: \"rgb(0, 130, 102)\",\r\n                    hoverLink: \"rgba(172,172,172)\",\r\n                    checkedLink: \"red\",\r\n                    mainText: \"rgba(109,109,109)\",\r\n                    hoverMainText: \"#fff\",\r\n                }\r\n            }\r\n        case SET_BLUE:\r\n            return {\r\n                ...state,\r\n                themeColors: {\r\n                    mainBorder: \"black\",\r\n                    mainBG: \"#83bfff\",\r\n                    subBG: \"#007bff\",\r\n                    followedBG: \"rgb(40, 164, 64)\",\r\n                    unfollowedBG: \"rgb(228, 127, 127)\",\r\n                    mainLink: \"#83bfff\",\r\n                    hoverLink: \"rgba(172,172,172)\",\r\n                    checkedLink: \"yellow\",\r\n                    mainText: \"black\",\r\n                    hoverMainText: \"#fff\",\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setDarkTheme = () => ({type: SET_DARK});\r\nexport const setLightTheme = () => ({type: SET_LIGHT});\r\nexport const setBlueTheme = () => ({type: SET_BLUE});\r\n\r\n\r\nexport default themeReducer;","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\r\nimport thunkMiddleWare from \"redux-thunk\"\r\nimport profileReducer from \"./profile_reducer\";\r\nimport messagesReducer from \"./messages_reducer\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app_reducer\";\r\nimport themeReducer from \"./theme_reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    theme: themeReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\nwindow.store = store;\r\nexport default store;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Navbar, Nav, NavDropdown, Form, Button} from 'react-bootstrap'\r\nimport reduxLogo from '../../img/redux-logo.svg'\r\nimport reactLogo from '../../img/react-logo.svg'\r\nimport bootstrapLogo from '../../img/bootstrap-logo.svg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    let [currentTheme, setCurrentTheme] = useState(\"dark\")\r\n    let [currentVariant, setCurrentVariant] = useState(\"dark\")\r\n\r\n    const setDarkTheme = () => {\r\n        props.setDarkTheme();\r\n        setCurrentTheme(\"dark\");\r\n        setCurrentVariant(\"dark\");\r\n    }\r\n    const setLightTheme = () => {\r\n        props.setLightTheme();\r\n        setCurrentTheme(\"light\");\r\n        setCurrentVariant(\"light\");\r\n    }\r\n    const setBlueTheme = () => {\r\n        props.setBlueTheme();\r\n        setCurrentTheme(\"primary\");\r\n        setCurrentVariant(\"light\");\r\n    }\r\n    useEffect(() => {\r\n        setCurrentTheme(currentTheme)\r\n        setCurrentVariant(currentVariant)\r\n    }, [currentTheme, currentVariant])\r\n    return (\r\n        <Navbar bg={currentTheme} variant={currentVariant} expand=\"md\" className=\"mb-3\">\r\n            <Navbar.Brand href=\"#home\">React Developers Network</Navbar.Brand>\r\n            <img alt=\"logo\" src={reactLogo} style={{width: 50}} className=\"ml-1\"></img>\r\n            <img alt=\"logo\" src={reduxLogo} style={{width: 50}} className=\"ml-1\"></img>\r\n            <img alt=\"logo\" src={bootstrapLogo} style={{width: 50}} className=\"ml-1\"></img>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <NavDropdown title=\"Theme\" className=\"ml-5\" id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item onClick={setLightTheme}>Light&nbsp;<i\r\n                            className=\"fas fa-palette\"></i></NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={setDarkTheme}>Dark&nbsp;<i\r\n                            className=\"fas fa-palette\"></i></NavDropdown.Item>\r\n                        <NavDropdown.Item onClick={setBlueTheme}>Blue&nbsp;<i\r\n                            className=\"fas fa-palette\"></i></NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n                <Form inline>\r\n                    {props.isAuth ?\r\n                        <div>\r\n                            <Button variant=\"success\" onClick={props.logOut}>Log Out</Button>\r\n                        </div> :\r\n                        <div>\r\n                            <NavLink to='/login' activeClassName=\"activeLink\"><Button variant=\"success\">Log in</Button></NavLink>\r\n                        </div>\r\n                    }\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {logOut} from '../../redux/auth_reducer';\r\nimport {setDarkTheme, setLightTheme, setBlueTheme} from '../../redux/theme_reducer'\r\nimport Header from './Header';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        styles: state.theme.themeColors,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logOut, setDarkTheme, setLightTheme, setBlueTheme})(HeaderContainer);\r\n","import styled from 'styled-components'\r\n\r\nexport const AsideNavBar = styled.div`\r\n.nav {\r\nbackground-color: ${(props) => props.styles.mainBG};\r\ncolor: ${(props) => props.styles.mainLink};\r\nborder-radius: 10px;\r\nborder: 2px solid ${(props) => props.styles.mainBorder};\r\nmargin-bottom: 10px;\r\n}\r\n.item {\r\n  margin: 5px;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n}\r\n.item:hover {\r\n  color: ${(props) => props.styles.hoverLink};\r\n}\r\n.list {\r\n  padding-left: 0px;\r\n}\r\n\r\nli {\r\n  display: block;\r\n  list-style: none;\r\n}\r\na {\r\n  display: block;\r\n  text-decoration: none;\r\n  color: ${(props) => props.styles.mainLink};\r\n}\r\n.activeLink {\r\n  color: ${(props) => props.styles.checkedLink};\r\n}\r\n`","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {AsideNavBar} from './Navbar.styles';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <AsideNavBar styles={props.styles}>\r\n            <nav className=\"nav\">\r\n                <ul className=\"list\">\r\n                    <li>\r\n                        <NavLink className=\"item\" to='/profile' activeClassName=\"activeLink\">My profile</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink className=\"item\" to='/dialogs' activeClassName=\"activeLink\">Messages</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink className=\"item\" to='/communities' activeClassName=\"activeLink\">Communities</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink className=\"item\" to='/news' activeClassName=\"activeLink\">News</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink className=\"item\" to='/users' activeClassName=\"activeLink\">Users</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </AsideNavBar>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        styles: state.theme.themeColors\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import styled from 'styled-components'\r\n\r\nexport const Status = styled.span`\r\n  cursor: ${(props) => props.isOwner && 'pointer'};\r\n  opacity: ${(props) => props.status ? 1 : .5};\r\n`\r\nexport const ProfileMenu = styled.div`\r\n  .updatePhoto,\r\n  .setProfile {\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    display: block;\r\n    margin-right: 10px;\r\n    position: relative;\r\n    color: ${(props) => props.styles.mainText};\r\n    text-align: right;\r\n    text-align: center;\r\n}\r\n\r\n.updatePhoto [type=file] {\r\n    display: block;\r\n    opacity: 0;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n}\r\n.updatePhoto:hover,\r\n.setProfile:hover {\r\n  color: ${(props) => props.styles.hoverLink};\r\n}\r\n`\r\n\r\nexport const PersonalData = styled.div`\r\n.personalDataContainer {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  min-height: 100px;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border: 2px solid ${(props) => props.styles.mainBorder};\r\n  border-radius: 10px;\r\n  background-color: ${(props) => props.styles.mainBG};\r\n  color: ${(props) => props.styles.hoverLink};\r\n}\r\n.avatar {\r\n  border: 2px solid ${(props) => props.styles.mainBorder};\r\n  margin-right: 10px;\r\n}\r\n.profileDataContainer {\r\n  flex-grow: 1;\r\n}\r\n.table {\r\n  color: ${(props) => props.styles.hoverLink};\r\n}\r\n.table caption {\r\n  caption-side: top;\r\n  color: ${(props) => props.styles.hoverLink};\r\n}\r\n.table td:first-child {\r\n color: ${(props) => props.styles.mainLink};\r\n}\r\n.table td, \r\n.table th {\r\n    padding: .5rem;\r\n}\r\n.card {\r\n  background-color: ${(props) => props.styles.mainBG};\r\n  color: ${(props) => props.styles.hoverLink};\r\n  border: 0;\r\n  border-radius: 0;\r\n}\r\n.card-header{\r\npadding: 5px 10px;\r\n}\r\n.card-header:hover {\r\n  border-radius: 0;\r\n  cursor: pointer;\r\n  background-color: ${(props) => props.styles.subBG};\r\n}\r\n`\r\nexport const PersonalDataForm = styled.div`\r\n  min-width: 200px;\r\n  span {\r\n    margin-right: 10px;\r\n  }\r\n  table {\r\n  width: 100%;\r\n  }\r\n  .formRow {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 5px;}\r\n  textarea,\r\n  .formBasicCheckbox {\r\n    min-width: 204px;\r\n  }\r\n  input[type=checkbox] {\r\n    border: 2px solid red;\r\n  }\r\n`\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Status} from './PersonalData.styles';\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n    let [editMode, setEditMode] = useState(false); //присваивание деструктуризацией\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let [status, setStatus] = useState(props.status);\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    return (\r\n        <>\r\n            {!editMode && props.isOwner &&\r\n            <div onClick={activateEditMode}>\r\n                <Status status={props.status}\r\n                        isOwner={props.isOwner}>{status || (props.isOwner && 'set a status message')}</Status>\r\n            </div>\r\n            }\r\n            {editMode && props.isOwner &&\r\n            <div>\r\n                <input className=\"form-control\" autoFocus={true} onChange={onStatusChange} value={status}\r\n                       onBlur={deactivateEditMode}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Accordion, Card} from 'react-bootstrap'\r\nimport ProfileStatusWithHook from './ProfileStatusWithHook';\r\n\r\nexport const ProfileData = ({profile, isOwner, status, updateStatus}) => {\r\n    return (\r\n        <div className=\"profileDataContainer\">\r\n            <h5>{profile.fullName}</h5>\r\n            <ProfileStatusWithHook status={status} updateStatus={updateStatus} isOwner={isOwner}/>\r\n            <Table className=\"table\">\r\n                <caption>\r\n                    Profile information:\r\n                </caption>\r\n                <tbody>\r\n                <tr>\r\n                    <td>About me:</td>\r\n                    <td>{profile.aboutMe}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>lookingForAJob:</td>\r\n                    <td>{profile.lookingForAJob ? 'Yes' : 'No'}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Description about job:</td>\r\n                    <td>{profile.lookingForAJobDescription}</td>\r\n                </tr>\r\n                </tbody>\r\n            </Table>\r\n\r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Card>\r\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                        Show Contacts\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"1\">\r\n                        <Table>\r\n                            <tbody>\r\n                            {Object.keys(profile.contacts).map(key => {\r\n                                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                            })}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <tr>\r\n            <td>{contactTitle}:</td>\r\n            <td><a href={contactValue}>{contactValue}</a></td>\r\n        </tr>\r\n    )\r\n}","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\nimport {Field} from 'redux-form'\r\nimport {Form} from 'react-bootstrap'\r\n\r\n\r\nconst FormsControl = ({meta: {touched, error}, children}) => {\r\n    const isError = (error && touched);\r\n    return (\r\n        <div className={isError ? s.error : ''}>\r\n            {children}\r\n            {isError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const newMeta = {};\r\n    for (let key in meta) {\r\n        newMeta[key.toLowerCase()] = meta[key] + ''\r\n    }\r\n    return <FormsControl {...props}><textarea {...input} {...newMeta} {...restProps}></textarea></FormsControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    const newMeta = {};\r\n    for (let key in meta) {\r\n        newMeta[key.toLowerCase()] = meta[key] + ''\r\n    }\r\n    return <FormsControl {...props}>\r\n        <Form.Control {...input} {...newMeta} {...restProps}/>\r\n    </FormsControl>\r\n}\r\n\r\nexport const createField = (component, name, validators, placeholder, type) => {\r\n    return <Field component={component} name={name} validate={validators} placeholder={placeholder} type={type}/>\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value && value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {Accordion, Card} from 'react-bootstrap';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {Input, createField, Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {required} from '../../../utils/validators/validators';\r\nimport {PersonalDataForm} from './PersonalData.styles';\r\nimport s from '../../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\nconst EditProfileForm = ({profile, deactivateEditMode, handleSubmit, error}) => {\r\n    return (\r\n        <PersonalDataForm>\r\n            <Form className=\"form\" onSubmit={handleSubmit}>\r\n                {error && <span className={s.summaryError}>{error}</span>}\r\n                <table>\r\n                    <tbody>\r\n                    <tr className=\"formRow\">\r\n                        <td><span>Full name: </span></td>\r\n                        <td>{createField(Input, \"fullName\", [required], \"Full name\")}</td>\r\n                    </tr>\r\n                    <tr className=\"formRow\">\r\n                        <td><span>About me: </span></td>\r\n                        <td>{createField(Textarea, \"aboutMe\", [], \"About me\")}</td>\r\n                    </tr>\r\n                    <tr className=\"formRow\">\r\n                        <td><span>Looking for a job:</span></td>\r\n                        <td><Field component={\"input\"} name=\"lookingForAJob\" type=\"checkbox\"/></td>\r\n                    </tr>\r\n                    <tr className=\"formRow\">\r\n                        <td><span>Description about job: </span></td>\r\n                        <td>{createField(Textarea, \"lookingForAJobDescription\", [required], \"Professional skills\")}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                            Show Contacts\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"1\" id=\"collapsetbody\" className=\"collapsetbody\">\r\n                            <table>\r\n                                <tbody>\r\n                                {Object.keys(profile.contacts).map(key => {\r\n                                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                                })}\r\n                                </tbody>\r\n                            </table>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n                <Button variant=\"success\" type=\"submit\">Save</Button>\r\n                <Button variant=\"secondary\" onClick={deactivateEditMode} style={{float: \"right\"}}>Cancel</Button>\r\n            </Form>\r\n        </PersonalDataForm>\r\n    )\r\n}\r\nconst EditProfileReduxForm = reduxForm({form: 'editProfile'})(EditProfileForm)\r\n\r\nexport const ProfileDataForm = ({profile, deactivateEditMode, saveProfileData}) => {\r\n    const onSubmit = (formData) => {\r\n        saveProfileData(formData)\r\n            .then(() => deactivateEditMode())\r\n    }\r\n    return (\r\n        <EditProfileReduxForm profile={profile} initialValues={profile} onSubmit={onSubmit}\r\n                              deactivateEditMode={deactivateEditMode}/>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle}) => {\r\n    return (\r\n        <tr className=\"formRow\">\r\n            <td><span>{contactTitle}: </span></td>\r\n            <td>{createField(Input, 'contacts.' + contactTitle, [], contactTitle, '')}</td>\r\n        </tr>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {PersonalData, ProfileMenu} from './PersonalData.styles';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport userPic from '../../../img/genericUser.png'\r\nimport {ProfileData} from './ProfileData';\r\nimport {ProfileDataForm} from './ProfileDataForm';\r\n\r\n\r\nconst ProfileDescription = ({profile, isOwner, status, styles, saveAvatar, updateStatus, saveProfileData}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files[0]) {\r\n            saveAvatar(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <PersonalData styles={styles}>\r\n            <div className=\"personalDataContainer\">\r\n                <div>\r\n                    <img className=\"avatar\" alt=\"avatar\"\r\n                         src={profile.photos.large || userPic} width=\"150px\"/>\r\n                    {isOwner &&\r\n                    <ProfileMenu onChange={onMainPhotoSelected} styles={styles}>\r\n                        <label className=\"updatePhoto\">Update photo<input type=\"file\"/></label>\r\n                        {!editMode && <span className=\"setProfile\" onClick={activateEditMode}>Edit profile data</span>}\r\n                    </ProfileMenu>\r\n                    }\r\n                </div>\r\n\r\n                {editMode ? <ProfileDataForm profile={profile}\r\n                                             deactivateEditMode={deactivateEditMode}\r\n                                             saveProfileData={saveProfileData}/> :\r\n                    <ProfileData profile={profile}\r\n                                 status={status}\r\n                                 updateStatus={updateStatus}\r\n                                 isOwner={isOwner}/>}\r\n            </div>\r\n        </PersonalData>\r\n    )\r\n}\r\n\r\nexport default ProfileDescription;\r\n","import styled from 'styled-components'\r\n\r\nconst PostContainer = styled.div`\r\n{\r\n  margin: 20px 0;\r\n  padding: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${(props) => props.styles.mainBG};\r\n  border: 2px solid ${(props) => props.styles.mainBorder};\r\n  border-radius: 10px;\r\n  color: ${(props) => props.styles.mainLink};\r\n}\r\n.wrapper {\r\n  display: flex;\r\n}\r\n\r\n.wrapper .post_info {\r\n  margin: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.post_info time {\r\n  text-align: right;\r\n  color: ${(props) => props.styles.mainLink};\r\n}\r\n.content {\r\n  margin: 10px;\r\n  margin-top: 0;\r\n  color: ${(props) => props.styles.hoverLink};\r\n}\r\n`\r\nexport default PostContainer;","import React from \"react\";\nimport {withRouter} from 'react-router-dom';\nimport userPic from \"../../../img/genericUser.png\";\nimport {connect} from 'react-redux';\nimport s from \"./thumbnail.module.css\";\nimport {getUserProfile} from \"../../../redux/profile_reducer\";\nimport {compose} from \"redux\";\n\nclass Thumbnail extends React.Component {\n    refreshThumbnail() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.currentUserId\n        }\n        ;\n        this.props.getUserProfile(userId);\n    }\n\n    componentDidMount() {\n        this.refreshThumbnail();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\n            this.refreshThumbnail();\n        }\n    }\n\n    render() {\n        if (!this.props.profile) {\n            return (\n                <div className={s.thumbnail}>\n                    <img className={s.avatar} alt=\"avatar\" src={userPic} width=\"100%\"/>\n                </div>\n            )\n        }\n        return (\n            <div className={s.thumbnail}>\n                <img className={s.avatar} alt=\"avatar\" src={this.props.profile.photos.small || userPic} width=\"100%\"/>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    currentUserId: state.auth.userId\n});\nexport default compose(\n    connect(mapStateToProps, {getUserProfile}),\n    withRouter)(Thumbnail);\n","import React from 'react';\r\nimport PostContainer from './PostContainer.styles.js';\r\nimport Thumbnail from \"../../../common/Thumbnail/thumbnail\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <PostContainer styles={props.styles}>\r\n            <div className=\"wrapper\">\r\n                <Thumbnail/>\r\n                <div className=\"post_info\">\r\n                    <span>{props.author}</span>\r\n                    <time>{props.datetime}</time>\r\n                </div>\r\n            </div>\r\n            <div className=\"content\">\r\n                {props.text}\r\n            </div>\r\n            <div className=\"likesCount\">\r\n                <span>{props.likesCount} likes</span>\r\n            </div>\r\n        </PostContainer>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst Posts = React.memo(props => {\r\n    let postsElements = props.posts.map((p) => <Post key={p.id} datetime={p.datetime}\r\n                                                     author={p.author} text={p.text} likesCount={p.likesCount}\r\n                                                     styles={props.styles}/>)\r\n    return (\r\n        <div>\r\n            {postsElements}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Posts;","import styled from 'styled-components'\r\n\r\nconst NewPostContainer = styled.div`\r\n{\r\n  margin: 20px 0;\r\n  padding: 5px;\r\n  background-color: ${(props) => props.styles.mainBG};\r\n  border: 2px solid ${(props) => props.styles.mainBorder};\r\n  border-radius: 10px;\r\n}\r\n\r\n.wrapper {\r\n  display: flex;\r\n}\r\n\r\nform {\r\n  display: block;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  margin-right: 20px;\r\n}\r\ntextarea {\r\n  margin-bottom: 10px;\r\n}\r\nbutton {\r\n  float: right;\r\n}\r\n`\r\nexport default NewPostContainer;","import React from 'react';\r\nimport StyledWrapper from './NewPostContainer.styles.js';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {required, maxLengthCreator, minLengthCreator} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\nimport Button from 'react-bootstrap/Button'\r\nimport userPic from \"../../../img/genericUser.png\";\r\nimport Thumbnail from \"../../common/Thumbnail/thumbnail\";\r\n\r\nconst maxLengthValidator = maxLengthCreator(30);\r\nconst minLengthValidator = minLengthCreator(2);\r\nconst NewPostForm = (props) => {\r\n    const onSubmitLocal = (data) => {\r\n        props.handleSubmit(data);\r\n        props.reset();\r\n    }\r\n    return (<form onSubmit={onSubmitLocal}>\r\n        <Field className=\"form-control\" component={Textarea} name=\"newBody\" placeholder=\"Write your post here...\"\r\n               validate={[required, maxLengthValidator, minLengthValidator]}/>\r\n        <Button type=\"submit\" variant=\"light\">Post</Button>\r\n    </form>)\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({form: 'newPost'})(NewPostForm);\r\n\r\nexport const NewPostContainer = (props) => {\r\n    return (\r\n        <StyledWrapper styles={props.styles}>\r\n            <div className=\"wrapper\">\r\n                <Thumbnail/>\r\n                <NewPostReduxForm onSubmit={props.onSubmit}/>\r\n            </div>\r\n        </StyledWrapper>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {NewPostContainer} from './NewPostContainer';\r\n\r\nexport const NewPost = React.memo(props => {\r\n    const addPost = (formData) => {\r\n        props.addPost(formData.newBody, props.profile.fullName);\r\n    }\r\n    return (\r\n        <NewPostContainer styles={props.styles} onSubmit={addPost}/>\r\n    )\r\n})\r\n\r\nexport default NewPost;\r\n","import React from 'react';\r\nimport ProfileDescription from './ProfileDescription/ProfileDescription';\r\nimport Posts from './Posts/Posts';\r\nimport NewPost from './NewPost/NewPost';\r\n\r\nconst Profile = ({profile, status, updateStatus, addPost, posts, styles, isOwner, saveAvatar, saveProfileData}) => {\r\n    return (\r\n        <main>\r\n            <ProfileDescription isOwner={isOwner}\r\n                                saveAvatar={saveAvatar}\r\n                                profile={profile}\r\n                                status={status}\r\n                                updateStatus={updateStatus}\r\n                                styles={styles}\r\n                                saveProfileData={saveProfileData}/>\r\n            {isOwner &&\r\n            <NewPost addPost={addPost} styles={styles}\r\n                     profile={profile}/>\r\n            }\r\n            {isOwner &&\r\n            <Posts posts={posts} styles={styles}/>\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForAuthRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/login'/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForAuthRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    addPost,\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    saveAvatar,\r\n    saveProfileData\r\n} from '../../redux/profile_reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.currentUserId\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    posts: state.profilePage.posts,\r\n    status: state.profilePage.status,\r\n    newPostText: state.profilePage.newPostText,\r\n    currentUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    styles: state.theme.themeColors,\r\n    saveProfileData: state.profilePage\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost, getUserProfile, getUserStatus, updateStatus, saveAvatar, saveProfileData}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer)\r\n","import styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n{\r\n  padding: 5px;\r\n\r\n  display: grid;\r\n  grid-template-rows: 100%;\r\n  grid-template-columns: 3fr 8fr;\r\n  grid-template-areas: \"\";\r\n  grid-gap: 10px;\r\n\r\n  color: ${(props) => props.styles.hoverLink};\r\n\r\n  border-radius: 10px;\r\n  background-color: ${(props) => props.styles.mainBG};\r\n  border: 2px solid ${(props) => props.styles.mainBorder};\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: ${(props) => props.styles.mainLink};\r\n}\r\n`\r\nexport default Wrapper;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <NavLink to={path} className={s.item}>\r\n            {props.name + ' ' + props.surname}\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","/* eslint-disable react/jsx-pascal-case */\r\nimport React from 'react';\r\nimport s from './DialogItems.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\n\r\nconst DialogItems = (props) => {\r\n    let dialogs_elements = props.dialogs\r\n        .map(d => <DialogItem name={d.name} surname={d.surname} key={d.user_id}/>)\r\n    return (\r\n        <div className={s.dialog_items}>\r\n            {dialogs_elements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItems;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Messages.module.css';\r\nimport Message from './Message/Message';\r\n\r\n\r\nconst Messages = (props) => {\r\n    let messages_elements = props.messages\r\n        .map(m => <Message key={m.id} message={m.message}\r\n                           author_id={m.author_id}/>);\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n            {messages_elements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport StyledWrapper from './Dialogs.styles.js';\r\nimport DialogItems from './Dialog-items/DialogItems';\r\nimport Messages from './Messages/Messages';\r\nimport {NewPostContainer} from '../Profile/NewPost/NewPostContainer';\r\n\r\nconst Dialogs = (props) => {\r\n    const addNewMessage = (formData) => {\r\n        props.sendMessage(formData.newBody)\r\n    }\r\n    return (\r\n        <div>\r\n            <StyledWrapper styles={props.styles}>\r\n                <DialogItems dialogs={props.dialogs}/>\r\n                <Messages messages={props.messages}/>\r\n            </StyledWrapper>\r\n            <NewPostContainer styles={props.styles} onSubmit={addNewMessage}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","import Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {addMessageActionCreator} from '../../redux/messages_reducer';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogs: state.messagesPage.dialogs,\r\n    messages: state.messagesPage.messages,\r\n    newMessageBody: state.messagesPage.newMessageBody,\r\n    styles: state.theme.themeColors,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (sendMessageBody) => {\r\n            dispatch(addMessageActionCreator(sendMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {reduxForm} from 'redux-form'\r\nimport {Input, createField} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {logIn} from '../../redux/auth_reducer';\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                {createField(Input, \"email\", [required], \"email\")}\r\n                <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                {createField(Input, \"password\", [required], \"password\", \"password\")}\r\n            </Form.Group>\r\n\r\n            {error && <span className={s.summaryError}>{error}</span>}\r\n\r\n            <Button variant=\"primary\" type=\"submit\">Log in</Button>\r\n        </Form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.logIn(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth === true) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {logIn})(Login)\r\n","import styled from 'styled-components'\r\n\r\nexport const FooterContainer = styled.footer`\r\n\r\n  background-color: ${(props) => props.styles.mainBG};\r\n  color: ${(props) => props.styles.mainText};\r\n  padding-bottom: 5px;\r\n\r\nh4 {\r\n  color: ${(props) => props.styles.hoverLink}\r\n}\r\np {\r\n  margin-bottom: 0px;\r\n}\r\nli a {\r\n  color: ${(props) => props.styles.mainLink}\r\n}\r\nli a:hover {\r\n  color: ${(props) => props.styles.hoverLink};\r\n  text-decoration: none;\r\n}\r\n`","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport {FooterContainer} from './Footer.styles'\r\nimport {connect} from 'react-redux';\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <FooterContainer styles={props.styles}>\r\n            <div className=\"middle-footer\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm={6} md={4}>\r\n                            <h4>Header 1</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"#/\">Lorem, ipsum dolor.</a></li>\r\n                                <li><a href=\"#/\">At, facere voluptates!</a></li>\r\n                                <li><a href=\"#/\">Aliquam, ex cupiditate?</a></li>\r\n                                <li><a href=\"#/\">Fugit, voluptatem in?</a></li>\r\n                            </ul>\r\n                        </Col>\r\n                        <Col sm={6} md={4}>\r\n                            <h4>Header 2</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"#/\">Quae, iure beatae!</a></li>\r\n                                <li><a href=\"#/\">Maxime, illo quo!</a></li>\r\n                                <li><a href=\"#/\">Fugiat, laboriosam debitis!</a></li>\r\n                                <li><a href=\"#/\">Incidunt, accusamus corporis!</a></li>\r\n                            </ul>\r\n                        </Col>\r\n                        <Col sm={6} md={4}>\r\n                            <h4>Header 3</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"#/\">Similique, qui voluptatem?</a></li>\r\n                                <li><a href=\"#/\">Alias, fuga facere.</a></li>\r\n                                <li><a href=\"#/\">Beatae, perferendis dolorem!</a></li>\r\n                                <li><a href=\"#/\">Ducimus, facere molestias!</a></li>\r\n                            </ul>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <div className=\"footer-bottom\">\r\n                <p className=\"text-sm-center\">\r\n                    &copy;{new Date().getFullYear()} React Developers Network - All Rights Reserved\r\n                </p>\r\n            </div>\r\n        </FooterContainer>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        styles: state.theme.themeColors\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Footer);","import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport {Col, Row, Container} from 'react-bootstrap'\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Preloader from './components/common/preloader/preloader';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport Login from './components/Login/Login';\r\nimport Footer from './components/Footer/Footer';\r\nimport {initializeApp} from './redux/app_reducer';\r\nimport {withSuspense} from './hoc/withSuspense';\r\nimport s from './App.css'\r\n\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Container className={s.container}>\r\n                    <Row>\r\n                        <Col xs={12} sm={3}><Navbar/></Col>\r\n                        <Col xs={12} sm={9}>\r\n                            <div>\r\n                                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                                <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                                <Route path='/users' render={withSuspense(UsersContainer)}/>\r\n                                <Route path='/login' render={() => <Login/>}/>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default connect(mapStateToProps, {initializeApp})(App);","import React, {Suspense} from 'react'\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux_store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/genericUser.e7119e2a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2XZdd\",\"error\":\"FormsControls_error__3d3aP\",\"summaryError\":\"FormsControls_summaryError___FkSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"thumbnail_thumbnail__3oYV8\"};","import React from 'react';\r\nimport s from './preloader.module.css';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.overlay}>\r\n            <div className={s.preloader}>\r\n                <div>\r\n                    <Spinner animation=\"border\" variant=\"secondary\"/>\r\n                    <br/>\r\n                    Loading...please wait\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;\r\n"],"sourceRoot":""}