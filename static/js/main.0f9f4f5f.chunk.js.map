{"version":3,"sources":["components/common/preloader/preloader.module.css","redux/users_reducer.js","img/genericUser.png","img/redux-logo.svg","img/react-logo.svg","img/bootstrap-logo.svg","components/Dialogs/Dialog-items/DialogItems.module.css","components/Dialogs/Dialog-items/DialogItem/DialogItem.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/Message/Message.module.css","api/api.js","serviceWorker.js","redux/profile_reducer.js","redux/messages_reducer.js","redux/auth_reducer.js","redux/app_reducer.js","redux/theme_reducer.js","redux/redux_store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.styles.js","components/Navbar/Navbar.jsx","components/Profile/ProfileDescription/PersonalData.styles.js","components/Profile/ProfileDescription/ProfileStatusWithHook.jsx","components/Profile/ProfileDescription/ProfileData.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Profile/ProfileDescription/ProfileDataForm.jsx","components/Profile/ProfileDescription/ProfileDescription.jsx","components/Profile/Posts/Post/PostContainer.styles.js","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/NewPost/NewPostContainer.styles.js","components/Profile/NewPost/NewPostContainer.jsx","components/Profile/NewPost/NewPost.jsx","components/Profile/Profile.jsx","hoc/withAuthRedirect.js","components/Profile/ProfileContainer.jsx","components/Dialogs/Dialogs.styles.js","components/Dialogs/Dialog-items/DialogItem/DialogItem.jsx","components/Dialogs/Dialog-items/DialogItems.jsx","components/Dialogs/Messages/Message/Message.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Login/Login.jsx","components/Footer/Footer.styles.js","components/Footer/Footer.jsx","App.js","hoc/withSuspense.js","index.js","components/common/FormsControls/FormsControls.module.css","components/common/preloader/preloader.jsx"],"names":["module","exports","initialState","users","totalUsersCount","pageSize","currentPage","isFetching","followingInProgress","followStatusChange","userId","type","setCurrentPage","toggleIsFetching","isfetching","toggleFollowingProgress","requestUsers","dispatch","a","usersAPI","getUsers","data","items","count","totalCount","follwUnfollowFlow","apiMethod","actionCreator","resultCode","followUser","bind","unfollowUser","usersReducer","state","action","map","u","id","followed","filter","instance","axios","baseURL","withCredentials","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","saveProfileData","progileData","saveAvatar","photo","formData","FormData","append","authAPI","me","logIn","email","password","rememberMe","logOut","Boolean","window","location","hostname","match","ADD_POST","posts","datetime","author","text","likesCount","profile","setStatus","getUserProfile","profileReducer","newPost","newPostBody","photos","dialogs","name","surname","user_id","messages","message","messagesReducer","newMessage","length","author_id","sendMessageBody","stateCopy","newMessageBody","push","login","isAuth","setAuthUserData","getAuthUserData","authReducer","initialized","appReducer","themeColors","mainBorder","mainBG","subBG","followedBG","unfollowedBG","mainLink","hoverLink","checkedLink","mainText","hoverMainText","themeReducer","reducers","combineReducers","profilePage","messagesPage","usersPage","auth","form","formReducer","app","theme","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","Header","props","useState","currentTheme","setCurrentTheme","currentVariant","setCurrentVariant","useEffect","bg","variant","expand","className","Brand","href","alt","src","reactLogo","style","width","reduxLogo","bootstrapLogo","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","onClick","setLightTheme","setDarkTheme","setBlueTheme","Form","inline","color","Button","HeaderContainer","this","React","Component","connect","styles","AsideNavBar","styled","div","to","activeClassName","Status","span","isOwner","ProfileMenu","PersonalData","PersonalDataForm","ProfileStatusWithHook","editMode","setEditMode","class","autoFocus","onChange","e","currentTarget","value","onBlur","ProfileData","fullName","Table","aboutMe","lookingForAJob","lookingForAJobDescription","Accordion","defaultActiveKey","Card","as","eventKey","Object","keys","contacts","key","contactTitle","contactValue","Contact","FormsControl","meta","touched","error","children","isError","s","Textarea","input","restProps","newMeta","toLowerCase","Input","Control","createField","component","validators","placeholder","Field","validate","required","EditProfileReduxForm","reduxForm","deactivateEditMode","handleSubmit","onSubmit","summaryError","float","ProfileDataForm","initialValues","ProfileDescription","large","userPic","target","files","PostContainer","Post","Posts","memo","postsElements","p","maxLength","minLength","NewPostContainer","maxLengthValidator","minLengthValidator","NewPostReduxForm","reset","NewPost","addPost","newBody","Profile","mapStateToPropsForAuthRedirect","withAuthRedirect","RedirectComponent","ProfileContainer","params","currentUserID","getUserStatus","refreshProfile","prevProps","prevState","snapshot","newPostText","log","getState","stopSubmit","_error","Promise","reject","withRouter","Wrapper","DialogItem","path","item","DialogItems","dialogs_elements","d","dialog_items","Message","Messages","messages_elements","m","Dialogs","sendMessage","addMessageActionCreator","LoginReduxForm","Group","controlId","Label","Text","FooterContainer","footer","Container","Row","Col","sm","md","Date","getFullYear","UsersContainer","lazy","App","initializeApp","container","xs","render","DialogsContainer","fallback","promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Preloader","overlay","preloader","animation"],"mappings":"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","file":"static/js/main.0f9f4f5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"preloader_overlay__8xjyj\",\"preloader\":\"preloader_preloader__znZXp\"};","import {usersAPI} from '../api/api'\r\nconst CHANGE_FOLLOW_STATUS = 'users/CHANGE_FOLLOW_STATUS'\r\nconst SET_USERS = 'users/SET_USERS'\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT'\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\nconst TOGGLE_FETCHING = 'users/TOGGLE_FETCHING'\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'users/TOGGLE_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n  users: [],\r\n  totalUsersCount: 1,\r\n  pageSize: 10,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_FOLLOW_STATUS:\r\n      return {\r\n        ...state,\r\n        users: state.users.map( u => {\r\n          if (u.id === action.userId) {\r\n            u.followed = !u.followed\r\n          }\r\n          return u\r\n        }),\r\n      }\r\n\r\n    case SET_USERS:\r\n      return {...state, users: action.users}\r\n\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {...state, totalUsersCount: action.count}\r\n    \r\n    case SET_CURRENT_PAGE:\r\n      return {...state, currentPage: action.currentPage}\r\n\r\n    case TOGGLE_FETCHING:\r\n      return {...state, isFetching: action.isfetching}\r\n      \r\n    case TOGGLE_FOLLOWING_PROGRESS:\r\n      return {...state, \r\n              followingInProgress: action.isFetching \r\n              ? [...state.followingInProgress, action.userId]\r\n              : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n  default:\r\n  return state;\r\n}\r\n}\r\n\r\nexport const followStatusChange = (userId) => ({ type: CHANGE_FOLLOW_STATUS, userId: userId})\r\n\r\nexport const setUsers = (userslist) => ({type: SET_USERS, users: userslist})\r\n\r\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_USERS_COUNT, count: count})\r\n \r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\nexport const toggleIsFetching = (isfetching) => ({type: TOGGLE_FETCHING, isfetching})\r\n\r\nexport const toggleFollowingProgress = (isfetching, userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isfetching, userId})\r\n\r\nexport const requestUsers =(currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true))\r\n  let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nconst follwUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId))\r\n  let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) dispatch(actionCreator(userId))\r\n      dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const followUser = (userId) => async (dispatch) => {\r\n  follwUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followStatusChange)\r\n  }\r\n\r\nexport const unfollowUser = (userId) => async (dispatch) => {\r\n  follwUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), followStatusChange)\r\n  }\r\n\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/genericUser.e7119e2a.png\";","module.exports = __webpack_public_path__ + \"static/media/redux-logo.aa0a3376.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap-logo.a759d587.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_items\":\"DialogItems_dialog_items__1KZrN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__1ozjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__16lM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3cKi8\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n      'API-KEY': 'e7349e98-057b-40d9-9127-715983016ca8'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n  },\r\n  followUser(userId) {\r\n    return instance.post(`follow/${userId}`, {})\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n  },\r\n  unfollowUser(userId) {\r\n    return instance.delete(`follow/${userId}`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n  },\r\n  getProfile(userId) {\r\n    console.warn('obsolete method. Use profileAPI object')\r\n    return profileAPI.getProfile(userId)\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId) {\r\n    return instance.get(`profile/${userId}`)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`/profile/status/${userId}`)\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`/profile/status/`, {status: status})\r\n  },\r\n  saveProfileData(progileData) {\r\n    return instance.put(`/profile/`, progileData)\r\n  },\r\n  saveAvatar(photo) {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", photo);\r\n    return instance.put(`/profile/photo/`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n  },\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`/auth/me`)\r\n    },\r\n  logIn(email, password, rememberMe) {\r\n    return instance.post(`/auth/login`, {email, password, rememberMe})\r\n    },\r\n  logOut() {\r\n    return instance.delete(`/auth/login`)\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { usersAPI, profileAPI } from \"../api/api\"\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst ADD_POST = 'profile/ADD_POST'\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE'\r\nconst SET_STATUS ='profile/SET_STATUS'\r\nconst SET_AVATAR = 'SET_AVATAR'\r\n\r\nconst initialState = {\r\n  posts: [\r\n    {\r\n      id: 3,\r\n      datetime: '2019-11-18T09:54',\r\n      author: 'Anastacia Zavorotnyuk',\r\n      text: 'Скиньте деньги на лечение, пожалуйста!',\r\n      likesCount: '289'\r\n    },\r\n    {\r\n      id: 2,\r\n      datetime: '2017-11-18T09:54',\r\n      author: 'Anastacia Zavorotnyuk',\r\n      text: 'adsasdas',\r\n      likesCount: '150'\r\n    },\r\n    {\r\n      id: 1,\r\n      datetime: '2016-11-18T09:54',\r\n      author: 'Anastacia Zavorotnyuk',\r\n      text: 'Post content: Lorem ipsum dolor, sit amet consectetur adipisicing elit. Eligendi sed facilis eos, dolorum enim vel distinctio doloremque molest',\r\n      likesCount: '64'\r\n    }\r\n  ],\r\n  profile: null,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      const newPost = {\r\n        id: +state.posts[0].id + 1,\r\n        datetime: '2019-11-18T09:54',\r\n        author: 'Anastacia Zavorotnyuk',\r\n        text: action.newPostBody,\r\n        likesCount: 0\r\n      }\r\n      return {...state, posts: [newPost, ...state.posts]};\r\n    }\r\n\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    case SET_AVATAR:\r\n      return {\r\n        ...state,\r\n        profile: {...state.profile, photos: action.photos}\r\n      }\r\n\r\n  default:\r\n  return state;\r\n}\r\n}\r\n\r\nexport const addPost = (newPostBody) => ({ type: ADD_POST, newPostBody})\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile})\r\n\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status})\r\n\r\nexport const setAvatarSuccess = (photos) => ({ type: SET_AVATAR, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  const data = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(data))\r\n  }\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n  }\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setStatus(status))\r\n    }\r\n    else {\r\n      console.log('error: status update')\r\n    }\r\n  }\r\n\r\nexport const saveAvatar = (photo) => async (dispatch) => {\r\n  const response = await profileAPI.saveAvatar(photo)\r\n  if (response.data.data.resultCode === 0) {\r\n    dispatch(setAvatarSuccess(response.data.photos))\r\n  }\r\n  else {\r\n    console.log('error: avatar update')\r\n  }\r\n}\r\n\r\nexport const saveProfileData = (formData) => async (dispatch, getState) => {\r\n  const response = await profileAPI.saveProfileData(formData);\r\n  const userId = getState().auth.userId;\r\n    if (response.data.resultCode===0) {\r\n      dispatch(getUserProfile(userId))\r\n    } else {\r\n      dispatch(stopSubmit('editProfile', {_error: response.data.messages[0]}));\r\n      return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD_MESSAGE'\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    {\r\n      name: \"Volodya\",\r\n      surname: \"Putler\",\r\n      user_id: \"1\",\r\n    },\r\n    {\r\n      name: \"Louis\",\r\n      surname: \"Suarez\",\r\n      user_id: \"2\",\r\n    },\r\n    {\r\n      name: \"Evgen\",\r\n      surname: \"Bajenov\",\r\n      user_id: \"3\",\r\n    },\r\n    {\r\n      name: \"Alexander\",\r\n      surname: \"Pushkin\",\r\n      user_id: \"4\",\r\n    },\r\n    {\r\n      name: \"Bari\",\r\n      surname: \"Alibasov\",\r\n      user_id: \"5\",\r\n    }\r\n  ],\r\n  messages: [\r\n    {\r\n      id: 1,\r\n      message: \"Плоти нологе!\",\r\n      user_id: 1\r\n    },\r\n    {\r\n      id: 2,\r\n      message: \"Let's grab a bite!\",\r\n      user_id: 2\r\n    },\r\n    {\r\n      id: 3,\r\n      message: \"For you and for Sashka!\",\r\n      user_id: 3\r\n    },\r\n    {\r\n      id: 4,\r\n      message: \"The less a woman we love, the easier she likes us...\",\r\n      user_id: 4\r\n    },\r\n    {\r\n      id: 5,\r\n      message: \"Let's drink?!\",\r\n      user_id: 5\r\n    },\r\n  ],\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case 'ADD_MESSAGE': {\r\n      let newMessage = {\r\n        id: +state.messages[state.messages.length - 1].id + 1,\r\n        author_id: '0',\r\n        message: action.sendMessageBody,\r\n      }\r\n      let stateCopy = {\r\n        ...state,\r\n         messages: [...state.messages]\r\n        }\r\n      if (stateCopy.newMessageBody !== '') {\r\n        stateCopy.messages.push(newMessage);\r\n      }\r\n      return stateCopy;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessageActionCreator = (sendMessageBody) => ({\r\n  type: ADD_MESSAGE, sendMessageBody\r\n});\r\n\r\nexport default messagesReducer;","import { authAPI } from '../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      }\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, data: {userId,\r\n   email, login, isAuth}})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me()\r\n      if (response.data.resultCode===0) {\r\n        let {id, email, login} = response.data.data //копирование деструктуризацией\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n      }\r\n  }\r\n\r\nexport const logIn = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.logIn(email, password, rememberMe);\r\n      if (response.data.resultCode===0) {\r\n        dispatch(getAuthUserData())\r\n      } else {\r\n        dispatch(stopSubmit('login', {_error: response.data.messages[0]}));\r\n      }\r\n}\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n  let response = await authAPI.logOut()\r\n    if (response.data.resultCode===0) {\r\n      dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","// import { authAPI } from '../api/api'\r\nimport { getAuthUserData } from './auth_reducer';\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\n\r\nlet initialState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n      default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  })\r\n  }\r\n\r\n\r\nexport default appReducer;","\r\nconst SET_DARK = 'SET_DARK'\r\nconst SET_BLUE = 'SET_BLUE'\r\nconst SET_LIGHT = 'SET_LIGHT'\r\n\r\nlet initialState ={\r\n  themeColors: {\r\n    mainBorder: \"black\",\r\n    mainBG: \"#343a40\",\r\n    subBG: \"#068063\",\r\n    followedBG: \"rgb(40, 164, 64)\",\r\n    unfollowedBG: \"rgb(228, 127, 127)\",\r\n    mainLink:  \"rgb(0, 130, 102)\",\r\n    hoverLink:  \"rgba(172,172,172)\",\r\n    checkedLink: \"white\",\r\n    mainText: \"rgba(109,109,109)\",\r\n    hoverMainText: \"#fff\",\r\n  }\r\n}\r\n\r\nconst themeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DARK:\r\n      return {\r\n        ...state,\r\n        themeColors: {\r\n            mainBorder: \"black\",\r\n            mainBG: \"#343a40\",\r\n            subBG: \"#068063\",\r\n            followedBG: \"rgb(40, 164, 64)\",\r\n            unfollowedBG: \"rgb(228, 127, 127)\",\r\n            mainLink:  \"rgb(0, 130, 102)\",\r\n            hoverLink:  \"rgba(172,172,172)\",\r\n            checkedLink: \"white\",\r\n            mainText: \"rgba(109,109,109)\",\r\n            hoverMainText: \"#fff\",\r\n        }\r\n      }\r\n    case SET_LIGHT:\r\n    return {\r\n      ...state,\r\n      themeColors: {\r\n        mainBorder: \"black\",\r\n        mainBG: \"#f8f9fa\",\r\n        subBG: \"rgb(228, 158, 158)\",\r\n        followedBG: \"rgb(40, 164, 64)\",\r\n        unfollowedBG: \"rgb(228, 127, 127)\",\r\n        mainLink:  \"rgb(0, 130, 102)\",\r\n        hoverLink:  \"rgba(172,172,172)\",\r\n        checkedLink: \"red\",\r\n        mainText: \"rgba(109,109,109)\",\r\n        hoverMainText: \"#fff\",\r\n      }\r\n    }\r\n    case SET_BLUE:\r\n      return {\r\n        ...state,\r\n        themeColors: {\r\n          mainBorder: \"black\",\r\n          mainBG: \"#83bfff\",\r\n          subBG: \"#007bff\",\r\n          followedBG: \"rgb(40, 164, 64)\",\r\n          unfollowedBG: \"rgb(228, 127, 127)\",\r\n          mainLink:  \"#83bfff\",\r\n          hoverLink:  \"rgba(172,172,172)\",\r\n          checkedLink: \"yellow\",\r\n          mainText: \"black\",\r\n          hoverMainText: \"#fff\",\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setDarkTheme = () => ({type: SET_DARK});\r\nexport const setLightTheme = () => ({type: SET_LIGHT});\r\nexport const setBlueTheme = () => ({type: SET_BLUE});\r\n\r\n\r\nexport default themeReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleWare from \"redux-thunk\"\r\nimport profileReducer from \"./profile_reducer\";\r\nimport messagesReducer from \"./messages_reducer\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app_reducer\";\r\nimport themeReducer from \"./theme_reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: messagesReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n  theme: themeReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\nwindow.store = store;\r\nexport default store;\r\n","import React, { useState, useEffect } from 'react'\r\nimport {Navbar, Nav, NavDropdown, Form, Button} from 'react-bootstrap'\r\nimport reduxLogo from '../../img/redux-logo.svg'\r\nimport reactLogo from '../../img/react-logo.svg'\r\nimport bootstrapLogo from '../../img/bootstrap-logo.svg'\r\n\r\nconst Header = (props) => {\r\n  let [currentTheme, setCurrentTheme] = useState(\"dark\")\r\n  let [currentVariant, setCurrentVariant] = useState(\"dark\")\r\n\r\n  const setDarkTheme = () => {\r\n    props.setDarkTheme();\r\n    setCurrentTheme(\"dark\");\r\n    setCurrentVariant(\"dark\");\r\n  } \r\n  const setLightTheme = () => {\r\n    props.setLightTheme();\r\n    setCurrentTheme(\"light\");\r\n    setCurrentVariant(\"light\");\r\n  } \r\n  const setBlueTheme = () => {\r\n    props.setBlueTheme();\r\n    setCurrentTheme(\"primary\");\r\n    setCurrentVariant(\"light\");\r\n  }\r\n  useEffect(()=>{\r\n    setCurrentTheme(currentTheme)\r\n    setCurrentVariant(currentVariant)\r\n  },[currentTheme, currentVariant])\r\n  return (\r\n    <Navbar bg={currentTheme} variant={currentVariant} expand=\"md\" className=\"mb-3\">\r\n      <Navbar.Brand href=\"#home\">React Developers Network</Navbar.Brand>\r\n      <img alt=\"logo\" src={reactLogo} style={{width: 50}} className=\"ml-1\"></img>\r\n      <img alt=\"logo\" src={reduxLogo} style={{width: 50}} className=\"ml-1\"></img>\r\n      <img alt=\"logo\" src={bootstrapLogo} style={{width: 50}} className=\"ml-1\"></img>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavDropdown title=\"Theme\" className=\"ml-5\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item onClick={setLightTheme}>Light&nbsp;<i className=\"fas fa-palette\"></i></NavDropdown.Item>\r\n            <NavDropdown.Item onClick={setDarkTheme}>Dark&nbsp;<i className=\"fas fa-palette\"></i></NavDropdown.Item>\r\n            <NavDropdown.Item onClick={setBlueTheme}>Blue&nbsp;<i className=\"fas fa-palette\"></i></NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Form inline>\r\n        {props.isAuth ?\r\n          <div>\r\n          <span style={{color: \"#fff\"}}>{props.login} - </span> \r\n          <Button variant=\"success\" onClick={props.logOut}>Log Out</Button>\r\n          </div>:\r\n          <Button variant=\"success\" href={'/login'}>Log in</Button>}\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logOut } from '../../redux/auth_reducer';\r\nimport { setDarkTheme, setLightTheme, setBlueTheme } from '../../redux/theme_reducer'\r\nimport Header from './Header';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header {...this.props}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    styles: state.theme.themeColors,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logOut, setDarkTheme, setLightTheme, setBlueTheme })(HeaderContainer);\r\n","import styled from 'styled-components'\r\n\r\nexport const AsideNavBar = styled.div`\r\n.nav {\r\nbackground-color: ${(props)=>props.styles.mainBG};\r\ncolor: ${(props)=>props.styles.mainLink};\r\nborder-radius: 10px;\r\nborder: 2px solid ${(props)=>props.styles.mainBorder};\r\nmargin-bottom: 10px;\r\n}\r\n.item {\r\n  margin: 5px;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n}\r\n.item:hover {\r\n  color: ${(props)=>props.styles.hoverLink};\r\n}\r\n.list {\r\n  padding-left: 0px;\r\n}\r\n\r\nli {\r\n  display: block;\r\n  list-style: none;\r\n}\r\na {\r\n  display: block;\r\n  text-decoration: none;\r\n  color: ${(props)=>props.styles.mainLink};\r\n}\r\n.activeLink {\r\n  color: ${(props)=>props.styles.checkedLink};\r\n}\r\n`","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { AsideNavBar } from './Navbar.styles';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <AsideNavBar styles={props.styles}>\r\n      <nav className=\"nav\">\r\n        <ul className=\"list\">\r\n          <li>\r\n            <NavLink className=\"item\" to='/profile' activeClassName=\"activeLink\">My profile</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"item\" to='/dialogs' activeClassName=\"activeLink\">Messages</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"item\" to='/communities' activeClassName=\"activeLink\">Communities</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"item\" to='/news' activeClassName=\"activeLink\">News</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"item\" to='/users' activeClassName=\"activeLink\">Users</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </AsideNavBar>\r\n  )\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n  styles: state.theme.themeColors}\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import styled from 'styled-components'\r\n\r\nexport const Status = styled.span`\r\n  cursor: ${(props)=>props.isOwner && 'pointer'};\r\n  opacity: ${(props)=>props.status ? 1 : .5};\r\n`\r\nexport const ProfileMenu = styled.div`\r\n  .updatePhoto,\r\n  .setProfile {\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    display: block;\r\n    margin-right: 10px;\r\n    position: relative;\r\n    color: ${(props)=>props.styles.mainText};\r\n    text-align: right;\r\n    text-align: center;\r\n}\r\n\r\n.updatePhoto [type=file] {\r\n    display: block;\r\n    opacity: 0;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n}\r\n.updatePhoto:hover,\r\n.setProfile:hover {\r\n  color: ${(props)=>props.styles.hoverLink};\r\n}\r\n`\r\n\r\nexport const PersonalData = styled.div`\r\n.personalDataContainer {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  min-height: 100px;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border: 2px solid ${(props)=>props.styles.mainBorder};\r\n  border-radius: 10px;\r\n  background-color: ${(props)=>props.styles.mainBG};\r\n  color: ${(props)=>props.styles.hoverLink};\r\n}\r\n.avatar {\r\n  border: 2px solid ${(props)=>props.styles.mainBorder};\r\n  margin-right: 10px;\r\n}\r\n.profileDataContainer {\r\n  flex-grow: 1;\r\n}\r\n.table {\r\n  color: ${(props)=>props.styles.hoverLink};\r\n}\r\n.table caption {\r\n  caption-side: top;\r\n  color: ${(props)=>props.styles.hoverLink};\r\n}\r\n.table td:first-child {\r\n color: ${(props)=>props.styles.mainLink};\r\n}\r\n.table td, \r\n.table th {\r\n    padding: .5rem;\r\n}\r\n.card {\r\n  background-color: ${(props)=>props.styles.mainBG};\r\n  color: ${(props)=>props.styles.hoverLink};\r\n  border: 0;\r\n  border-radius: 0;\r\n}\r\n.card-header{\r\npadding: 5px 10px;\r\n}\r\n.card-header:hover {\r\n  border-radius: 0;\r\n  cursor: pointer;\r\n  background-color: ${(props)=>props.styles.subBG};\r\n}\r\n`\r\nexport const PersonalDataForm = styled.div`\r\n  min-width: 200px;\r\n  span {\r\n    margin-right: 10px;\r\n  }\r\n  table {\r\n  width: 100%;\r\n  }\r\n  .formRow {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 5px;}\r\n  textarea,\r\n  .formBasicCheckbox {\r\n    min-width: 204px;\r\n  }\r\n  input[type=checkbox] {\r\n    border: 2px solid red;\r\n  }\r\n`\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Status } from './PersonalData.styles';\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n  let [editMode, setEditMode] = useState(false); //присваивание деструктуризацией\r\n  const activateEditMode = () => { \r\n    setEditMode(true)\r\n  }\r\n  const deactivateEditMode = () => { \r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  let [status, setStatus] = useState(props.status); \r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status);\r\n  }, [props.status])\r\n\r\n  return (\r\n    <>\r\n    {!editMode &&\r\n    <div onClick = { props.isOwner && activateEditMode}>\r\n      <Status status={props.status} isOwner={props.isOwner}>{status || (props.isOwner && 'set a status message')}</Status>\r\n    </div>\r\n    }\r\n    {editMode && props.isOwner && \r\n    <div>\r\n      <input class=\"form-control\" autoFocus={true} onChange={onStatusChange} value={status} onBlur={deactivateEditMode}/>\r\n    </div>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport {Accordion, Card} from 'react-bootstrap'\r\nimport ProfileStatusWithHook from './ProfileStatusWithHook';\r\n\r\nexport const ProfileData = ({profile, isOwner, status, updateStatus}) => { \r\n  return (\r\n    <div className=\"profileDataContainer\">\r\n        <h5>{profile.fullName}</h5>\r\n        <ProfileStatusWithHook status={status} updateStatus={updateStatus} isOwner={isOwner}/>\r\n        <Table className=\"table\">\r\n            <caption>\r\n            Profile information:\r\n            </caption>\r\n            <tbody>\r\n                <tr>\r\n                    <td>About me:</td>\r\n                    <td>{profile.aboutMe}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>lookingForAJob:</td>\r\n                    <td>{profile.lookingForAJob ? 'Yes' : 'No'}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Description about job:</td>\r\n                    <td>{profile.lookingForAJobDescription}</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n                \r\n        <Accordion defaultActiveKey=\"0\">\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                    Show Contacts\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                    <Table>\r\n                        <tbody>\r\n                                {Object.keys(profile.contacts).map(key => {\r\n                                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                                })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <tr>\r\n            <td>{contactTitle}:</td>\r\n            <td><a href={contactValue}>{contactValue}</a></td>\r\n        </tr>\r\n    )\r\n}","import React from 'react';\r\nimport s from './FormsControls.module.css'\r\nimport { Field } from 'redux-form'\r\nimport { Form } from 'react-bootstrap'\r\n\r\n\r\nconst FormsControl = ({meta: {touched, error}, children}) => {\r\n  const  isError = (error && touched);\r\n  return (\r\n    <div className={isError ? s.error : ''}>\r\n      {children}\r\n      { isError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n  const newMeta = {};\r\n  for (let key in meta) {\r\n    newMeta[key.toLowerCase()] = meta[key] + ''\r\n  }\r\n  return <FormsControl {...props}><textarea {...input} {...newMeta} {...restProps}></textarea></FormsControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n  const newMeta = {};\r\n  for (let key in meta) {\r\n    newMeta[key.toLowerCase()] = meta[key] + ''\r\n  }\r\n  return <FormsControl {...props}>\r\n          <Form.Control {...input} {...newMeta} {...restProps}/>\r\n        </FormsControl>\r\n}\r\n\r\nexport const createField = (component, name, validators, placeholder, type) => {\r\n  return  <Field component={component} name={name} validate={validators} placeholder={placeholder} type={type}/>\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator =(maxLength) => (value) => {\r\n  if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n}\r\n\r\nexport const minLengthCreator =(minLength) => (value) => {\r\n  if (value && value.length < minLength) return `Min length is ${minLength} symbols`;\r\n  return undefined;\r\n}","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, createField, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { required } from '../../../utils/validators/validators';\r\nimport { PersonalDataForm } from './PersonalData.styles';\r\nimport s from '../../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\nconst EditProfileForm = ({ profile, deactivateEditMode, handleSubmit, error }) => {\r\n    return (\r\n    <PersonalDataForm>\r\n        <Form className=\"form\" onSubmit={handleSubmit}>\r\n        {error && <span className={s.summaryError}>{error}</span>}\r\n        <table>\r\n            <tbody>\r\n                    <tr className=\"formRow\">\r\n                        <td><span>Full name: </span></td>\r\n                        <td>{createField(Input, \"fullName\", [required], \"Full name\")}</td>\r\n                    </tr>\r\n                    <tr className=\"formRow\">\r\n                        <td><span>About me: </span></td>\r\n                        <td>{createField(Textarea, \"aboutMe\", [], \"About me\")}</td>\r\n                    </tr>\r\n                    <tr className=\"formRow\">\r\n                        <td><span>Looking for a job:</span></td>\r\n                        <td><Field component={\"input\"} name=\"lookingForAJob\" type=\"checkbox\"/></td>\r\n                    </tr>\r\n                    <tr className=\"formRow\">\r\n                        <td><span>Description about job: </span></td>\r\n                        <td>{createField(Textarea, \"lookingForAJobDescription\", [required], \"Professional skills\")}</td>\r\n                    </tr>\r\n            </tbody>\r\n        </table>\r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Card>\r\n                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                        Show Contacts\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"1\"  id=\"collapsetbody\" className=\"collapsetbody\">\r\n                        <table>\r\n                            <tbody>\r\n                                {Object.keys(profile.contacts).map(key => {\r\n                                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n            <Button variant=\"success\" type=\"submit\">Save</Button>\r\n            <Button variant=\"secondary\" onClick={deactivateEditMode} style={{float: \"right\"}}>Cancel</Button>\r\n        </Form>\r\n    </PersonalDataForm>\r\n  )\r\n}\r\nconst EditProfileReduxForm = reduxForm({ form: 'editProfile' })(EditProfileForm)\r\n\r\nexport const ProfileDataForm = ({profile, deactivateEditMode, saveProfileData}) => {\r\n    const onSubmit = (formData) => {\r\n            saveProfileData(formData)\r\n            .then( () => deactivateEditMode() )\r\n    }\r\n    return (\r\n        <EditProfileReduxForm profile={profile} initialValues={profile} onSubmit={onSubmit} deactivateEditMode={deactivateEditMode}/>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle}) => {\r\n    return (\r\n        <tr className=\"formRow\">\r\n            <td><span>{contactTitle}: </span></td>\r\n            <td>{createField(Input, 'contacts.'+ contactTitle, [], contactTitle, '')}</td>\r\n        </tr>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {PersonalData, ProfileMenu} from './PersonalData.styles';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport userPic from '../../../img/genericUser.png'\r\nimport { ProfileData } from './ProfileData';\r\nimport { ProfileDataForm } from './ProfileDataForm';\r\n\r\n\r\nconst ProfileDescription = ({profile, isOwner, status, styles, saveAvatar, updateStatus, saveProfileData}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n  const activateEditMode = () => { \r\n    setEditMode(true)\r\n  }\r\n  const deactivateEditMode = () => { \r\n    setEditMode(false)\r\n  }\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files[0]) {\r\n            saveAvatar(e.target.files[0])\r\n        }\r\n    }\r\n  return (\r\n    <PersonalData styles={styles}>\r\n        <div className=\"personalDataContainer\">\r\n        <div>\r\n        <img className=\"avatar\" alt=\"avatar\"\r\n        src={profile.photos.large || userPic} width=\"150px\"/>\r\n        {isOwner && \r\n            <ProfileMenu onChange={onMainPhotoSelected} styles={styles}>\r\n                <label className=\"updatePhoto\">Update photo<input type=\"file\"/></label>\r\n                {!editMode && <span className=\"setProfile\" onClick={activateEditMode}>Edit profile data</span>}\r\n            </ProfileMenu>\r\n        }\r\n        </div>\r\n\r\n        {editMode ? <ProfileDataForm profile = {profile}\r\n                                     deactivateEditMode = {deactivateEditMode}\r\n                                     saveProfileData = {saveProfileData}/>:\r\n                    <ProfileData  profile = {profile}\r\n                                  status={status}\r\n                                  updateStatus={updateStatus}\r\n                                  isOwner={isOwner}/>}\r\n        </div>\r\n    </PersonalData>\r\n  )\r\n}\r\n\r\nexport default ProfileDescription;\r\n","import styled from 'styled-components'\r\n\r\nconst PostContainer = styled.div`\r\n{\r\n  margin: 20px 0;\r\n  padding: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${(props)=>props.styles.mainBG};\r\n  border: 2px solid ${(props)=>props.styles.mainBorder};\r\n  border-radius: 10px;\r\n  color: ${(props)=>props.styles.mainLink};\r\n}\r\n.wrapper {\r\n  display: flex;\r\n}\r\n\r\n.thumbnail {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n}\r\n.wrapper .post_info {\r\n  margin: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.post_info time {\r\n  text-align: right;\r\n  color: ${(props)=>props.styles.mainLink};\r\n}\r\n.content {\r\n  margin: 10px;\r\n  margin-top: 0;\r\n  color: ${(props)=>props.styles.hoverLink};\r\n}\r\n`\r\nexport default PostContainer;","import React from 'react';\r\nimport PostContainer from './PostContainer.styles.js';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <PostContainer styles={props.styles}>\r\n      <div className=\"wrapper\">\r\n        <div className=\"thumbnail\">\r\n          <img className=\"avatar\" alt=\"avatar\" \r\n          src=\"https://ilarge.lisimg.com/image/8012568/984full.jpg\" width=\"100%\" />\r\n        </div>\r\n        <div className=\"post_info\">\r\n          <span>{props.author}</span>\r\n          <time>{props.datetime}</time>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        {props.text}\r\n      </div>\r\n      <div className=\"likesCount\">\r\n        <span>{props.likesCount} likes</span>\r\n      </div>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\n\r\n\r\n  \r\nconst Posts = React.memo(props => {\r\n  let postsElements = props.posts.map((p) => <Post key={p.id} datetime={p.datetime}\r\n  author={p.author} text={p.text} likesCount={p.likesCount}  styles={props.styles}/>)\r\n  return (\r\n    <div>\r\n      {postsElements}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Posts;","import styled from 'styled-components'\r\n\r\nconst NewPostContainer = styled.div`\r\n{\r\n  margin: 20px 0;\r\n  padding: 5px;\r\n  background-color: ${(props)=>props.styles.mainBG};\r\n  border: 2px solid ${(props)=>props.styles.mainBorder};\r\n  border-radius: 10px;\r\n}\r\n\r\n.wrapper {\r\n  display: flex;\r\n}\r\n.thumbnail {\r\n  margin-right: 10px;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n}\r\nform {\r\n  display: block;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  margin-right: 20px;\r\n}\r\ntextarea {\r\n  margin-bottom: 10px;\r\n}\r\nbutton {\r\n  float: right;\r\n}\r\n`\r\nexport default NewPostContainer;","import React from 'react';\r\nimport StyledWrapper from './NewPostContainer.styles.js';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst  maxLengthValidator = maxLengthCreator(30);\r\nconst  minLengthValidator = minLengthCreator(2);\r\nconst NewPostForm = (props) => {\r\n  const onSubmitLocal = (data) => {\r\n    props.handleSubmit(data);\r\n    props.reset();\r\n  }\r\n  return (<form onSubmit={onSubmitLocal}>\r\n   <Field className=\"form-control\" component={Textarea} name=\"newBody\" placeholder=\"Write your post here...\"\r\n   validate={[required, maxLengthValidator, minLengthValidator]}/>\r\n        <Button type=\"submit\" variant=\"light\">Post</Button>\r\n        </form>)\r\n  }\r\n\r\nconst NewPostReduxForm =  reduxForm({form: 'newPost'})(NewPostForm);\r\n\r\nexport const NewPostContainer = (props) => {\r\n  return (\r\n    <StyledWrapper styles={props.styles}>\r\n      <div className=\"wrapper\">\r\n        <div className=\"thumbnail\">\r\n          <img className=\"avatar\" alt=\"avatar\" src=\"https://ilarge.lisimg.com/image/8012568/984full.jpg\" width=\"100%\"/>\r\n        </div>\r\n        <NewPostReduxForm onSubmit={props.onSubmit}/>\r\n      </div>\r\n    </StyledWrapper>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { NewPostContainer } from './NewPostContainer';\r\n\r\nexport const NewPost = React.memo(props => {\r\nconst addPost = (formData) => {\r\n  props.addPost(formData.newBody);\r\n}\r\n  return (\r\n    <NewPostContainer styles={props.styles} onSubmit={addPost}/>\r\n  )\r\n})\r\n\r\nexport default NewPost;\r\n","import React from 'react';\r\nimport ProfileDescription from './ProfileDescription/ProfileDescription';\r\nimport Posts from './Posts/Posts';\r\nimport NewPost from './NewPost/NewPost';\r\n\r\nconst Profile = ({profile, status, updateStatus, addPost, posts, styles, isOwner, saveAvatar, saveProfileData}) => {\r\n  return (\r\n    <main>  \r\n      <ProfileDescription isOwner={isOwner}\r\n                          saveAvatar={saveAvatar}\r\n                          profile={profile}\r\n                          status={status}\r\n                          updateStatus={updateStatus}\r\n                          styles={styles}\r\n                          saveProfileData = {saveProfileData}/>\r\n      <NewPost addPost={addPost} styles={styles}/>\r\n      <Posts posts={posts} styles={styles}/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForAuthRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n      class RedirectComponent extends React.Component {\r\n      render() {\r\n        if (!this.props.isAuth) {return <Redirect to='/login' />}\r\n        return <Component {...this.props}/>\r\n      }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForAuthRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {addPost, getUserProfile, getUserStatus, updateStatus, saveAvatar, saveProfileData } from '../../redux/profile_reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId){ userId = this.props.currentUserID};\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n  componentDidMount () {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n  render() {\r\n    return ( \r\n        <Profile {...this.props}\r\n                  isOwner={!this.props.match.params.userId}/>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  posts: state.profilePage.posts,\r\n  status: state.profilePage.status,\r\n  newPostText: state.profilePage.newPostText,\r\n  currentUserID: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n  styles: state.theme.themeColors,\r\n  saveProfileData: state.profilePage\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {addPost, getUserProfile, getUserStatus, updateStatus, saveAvatar, saveProfileData}),\r\n  withRouter,\r\n  withAuthRedirect)(ProfileContainer)\r\n","import styled from 'styled-components'\r\nconst Wrapper = styled.div`\r\n{\r\n  padding: 5px;\r\n\r\n  display: grid;\r\n  grid-template-rows: 100%;\r\n  grid-template-columns: 3fr 8fr;\r\n  grid-template-areas: \"\";\r\n  grid-gap: 10px;\r\n\r\n  color: ${(props)=>props.styles.hoverLink};\r\n\r\n  border-radius: 10px;\r\n  background-color: ${(props)=>props.styles.mainBG};\r\n  border: 2px solid ${(props)=>props.styles.mainBorder};\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: ${(props)=>props.styles.mainLink};\r\n}\r\n`\r\nexport default Wrapper;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n  return (\r\n    <NavLink to={path} className={s.item}>\r\n      {props.name + ' ' + props.surname}\r\n    </NavLink>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","/* eslint-disable react/jsx-pascal-case */\r\nimport React from 'react';\r\nimport s from './DialogItems.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\n\r\nconst DialogItems = (props) => {\r\n  let dialogs_elements = props.dialogs\r\n  .map(d => <DialogItem name={d.name} surname={d.surname} key={d.user_id} />)\r\n  return (\r\n    <div className={s.dialog_items}>\r\n      {dialogs_elements}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItems;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Messages.module.css';\r\nimport Message from './Message/Message';\r\n\r\n \r\nconst Messages = (props) => {\r\n  let messages_elements = props.messages\r\n  .map(m => <Message key={m.id} message={m.message} \r\n    author_id={m.author_id} />);\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n          {messages_elements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport StyledWrapper from './Dialogs.styles.js';\r\nimport DialogItems from './Dialog-items/DialogItems';\r\nimport Messages from './Messages/Messages';\r\nimport { NewPostContainer } from '../Profile/NewPost/NewPostContainer';\r\n\r\nconst Dialogs = (props) => {\r\n  const addNewMessage = (formData) => {\r\n    props.sendMessage(formData.newBody)\r\n  }\r\n  return (\r\n    <div>\r\n      <StyledWrapper styles={props.styles}>\r\n        <DialogItems dialogs={props.dialogs}/>\r\n        <Messages messages = {props.messages}/>\r\n      </StyledWrapper>\r\n    <NewPostContainer styles={props.styles} onSubmit={addNewMessage}/>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Dialogs","import Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { addMessageActionCreator } from '../../redux/messages_reducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogs: state.messagesPage.dialogs,\r\n    messages: state.messagesPage.messages,\r\n    newMessageBody: state.messagesPage.newMessageBody,\r\n    styles: state.theme.themeColors,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      sendMessage: (sendMessageBody) => {\r\n        dispatch(addMessageActionCreator(sendMessageBody));\r\n      }\r\n    }\r\n  }\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    )(Dialogs);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { reduxForm } from 'redux-form'\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { logIn } from '../../redux/auth_reducer';\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        {createField(Input, \"email\", [required], \"email\")}\r\n        <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        {createField(Input, \"password\", [required], \"password\", \"password\")}\r\n      </Form.Group>\r\n\r\n      {error && <span className={s.summaryError}>{error}</span>}\r\n\r\n      <Button variant=\"primary\" type=\"submit\">Log in</Button>\r\n    </Form>\r\n  )\r\n}\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.logIn(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n  if (props.isAuth === true) {\r\n    return <Redirect to={\"/profile\"} />\r\n  }\r\n  return (\r\n    <div>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { logIn })(Login)\r\n","import styled from 'styled-components'\r\n\r\nexport const FooterContainer = styled.footer`\r\n\r\n  background-color: ${(props)=>props.styles.mainBG};\r\n  color: ${(props)=>props.styles.mainText};\r\n  padding-bottom: 5px;\r\n\r\nh4 {\r\n  color: ${(props)=>props.styles.hoverLink}\r\n}\r\np {\r\n  margin-bottom: 0px;\r\n}\r\nli a {\r\n  color: ${(props)=>props.styles.mainLink}\r\n}\r\nli a:hover {\r\n  color: ${(props)=>props.styles.hoverLink};\r\n  text-decoration: none;\r\n}\r\n`","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport {FooterContainer} from './Footer.styles'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <FooterContainer styles={props.styles}>\r\n      <div className=\"middle-footer\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={6} md={4}>\r\n              <h4>Header 1</h4>\r\n              <ul className=\"list-unstyled\">\r\n                <li><a href=\"#/\">Lorem, ipsum dolor.</a></li>\r\n                <li><a href=\"#/\">At, facere voluptates!</a></li>\r\n                <li><a href=\"#/\">Aliquam, ex cupiditate?</a></li>\r\n                <li><a href=\"#/\">Fugit, voluptatem in?</a></li>\r\n              </ul>\r\n            </Col>\r\n            <Col sm={6} md={4}>\r\n              <h4>Header 2</h4>\r\n              <ul className=\"list-unstyled\">\r\n                <li><a href=\"#/\">Quae, iure beatae!</a></li>\r\n                <li><a href=\"#/\">Maxime, illo quo!</a></li>\r\n                <li><a href=\"#/\">Fugiat, laboriosam debitis!</a></li>\r\n                <li><a href=\"#/\">Incidunt, accusamus corporis!</a></li>\r\n              </ul>\r\n            </Col>\r\n            <Col sm={6} md={4}>\r\n              <h4>Header 3</h4>\r\n              <ul className=\"list-unstyled\">\r\n                <li><a href=\"#/\">Similique, qui voluptatem?</a></li>\r\n                <li><a href=\"#/\">Alias, fuga facere.</a></li>\r\n                <li><a href=\"#/\">Beatae, perferendis dolorem!</a></li>\r\n                <li><a href=\"#/\">Ducimus, facere molestias!</a></li>\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <div className=\"footer-bottom\">\r\n        <p className=\"text-sm-center\">\r\n          &copy;{new Date().getFullYear()} React Developers Network - All Rights Reserved\r\n        </p>\r\n      </div>\r\n    </FooterContainer>\r\n  )\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n  styles: state.theme.themeColors}\r\n}\r\nexport default connect(mapStateToProps)(Footer);","import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport {Col, Row, Container} from 'react-bootstrap'\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Preloader from './components/common/preloader/preloader';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport Login from './components/Login/Login';\r\nimport Footer from './components/Footer/Footer';\r\nimport { initializeApp } from './redux/app_reducer';\r\nimport { withSuspense } from './hoc/withSuspense';\r\nimport s from './App.css'\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n  }\r\n  render (){\r\n    if(!this.props.initialized){\r\n      return <Preloader/>\r\n    }\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Container className={s.container}>\r\n          <Row>\r\n            <Col xs={12} sm={3}><Navbar /></Col>\r\n            <Col xs={12} sm={9}>\r\n              <div>\r\n                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                <Route path='/dialogs'render={() => <DialogsContainer/>}/>\r\n                <Route path='/users'render={withSuspense(UsersContainer)}/>\r\n                <Route path='/login'render={() => <Login/>}/>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n  );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default connect( mapStateToProps, { initializeApp })(App);","import React, { Suspense } from 'react'\r\n\r\nexport const withSuspense = (Component) => {\r\n      return (props) => {\r\n        return <Suspense fallback={<div>Загрузка...</div>}>\r\n                  <Component {...props}/>\r\n              </Suspense>\r\n      }\r\n}\r\n","\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux_store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {Provider} from 'react-redux'\r\nimport App from './App';\r\n\r\n\r\n  ReactDOM.render( \r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App store = {store} dispatch = {store.dispatch.bind(store)}/>\r\n      </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: https://bit.ly/CRA-PWA\r\n    serviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2XZdd\",\"error\":\"FormsControls_error__3d3aP\",\"summaryError\":\"FormsControls_summaryError___FkSw\"};","import React from 'react';\r\nimport s from './preloader.module.css';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n\r\nconst Preloader = () => {\r\nreturn (\r\n  <div className={s.overlay}>\r\n    <div className={s.preloader}>\r\n      <div>\r\n      <Spinner animation=\"border\" variant=\"secondary\" />\r\n      <br/>\r\n        Loading...please wait\r\n      </div>\r\n    </div>\r\n  </div>\r\n)}\r\nexport default Preloader;\r\n"],"sourceRoot":""}